

================================================================
== Vitis HLS Report for 'operator_ls_assign_256u_uint_256u_void'
================================================================
* Date:           Mon Aug 23 09:42:09 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        refactor-fpga
* Solution:       refactor (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.836 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        4|        4|         1|          -|          -|     4|        no|
        |- Loop 2  |        3|        3|         1|          -|          -|     4|        no|
        |- Loop 3  |        ?|        ?|         2|          1|          1|     ?|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 6 3 
3 --> 3 6 4 
4 --> 5 
5 --> 6 4 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%p_read37 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read3"   --->   Operation 7 'read' 'p_read37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_read26 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read2"   --->   Operation 8 'read' 'p_read26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read15 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read1"   --->   Operation 9 'read' 'p_read15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read_12 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read"   --->   Operation 10 'read' 'p_read_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%x_read = read i19 @_ssdm_op_Read.ap_auto.i19, i19 %x"   --->   Operation 11 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%s = trunc i64 %p_read_12"   --->   Operation 12 'trunc' 's' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %state, void @empty_17, i32 0, i32 0, void @empty_18, i32 4294967295, i32 0, void @empty_18, void @empty_18, void @empty_18, i32 0, i32 0, i32 0, i32 0, void @empty_18, void @empty_18"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i256 %state"   --->   Operation 14 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.46ns)   --->   "%br_ln211 = br void %_ZN4intx4uintILj256EEC2Ev.exit.i.i.i" [./intx/int128.hpp:211]   --->   Operation 15 'br' 'br_ln211' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 3.19>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%i = phi i3 %i_57, void %.split2, i3 0, void %memset.loop2"   --->   Operation 16 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%k = phi i1 %k_14, void %.split2, i1 0, void %memset.loop2"   --->   Operation 17 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.71ns)   --->   "%i_57 = add i3 %i, i3 1" [./intx/int128.hpp:211]   --->   Operation 18 'add' 'i_57' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.56ns)   --->   "%icmp_ln211 = icmp_eq  i3 %i, i3 4" [./intx/int128.hpp:211]   --->   Operation 19 'icmp' 'icmp_ln211' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 20 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln211 = br i1 %icmp_ln211, void %.split2, void %_ZN4intxltILj256EEEbRKNS_4uintIXT_EEES4_.exit.i" [./intx/int128.hpp:211]   --->   Operation 21 'br' 'br_ln211' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%trunc_ln50 = trunc i3 %i" [./intx/intx.hpp:50]   --->   Operation 22 'trunc' 'trunc_ln50' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.54ns)   --->   "%tmp = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %p_read_12, i64 %p_read15, i64 %p_read26, i64 %p_read37, i2 %trunc_ln50" [./intx/int128.hpp:213]   --->   Operation 23 'mux' 'tmp' <Predicate = (!icmp_ln211)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.54ns)   --->   "%tmp_s = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 256, i64 0, i64 0, i64 0, i2 %trunc_ln50" [./intx/int128.hpp:213]   --->   Operation 24 'mux' 'tmp_s' <Predicate = (!icmp_ln211)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.36ns)   --->   "%sub_ln213 = sub i64 %tmp, i64 %tmp_s" [./intx/int128.hpp:213]   --->   Operation 25 'sub' 'sub_ln213' <Predicate = (!icmp_ln211)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.14ns)   --->   "%k1 = icmp_ult  i64 %tmp, i64 %tmp_s" [./intx/int128.hpp:214]   --->   Operation 26 'icmp' 'k1' <Predicate = (!icmp_ln211)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i1 %k" [./intx/int128.hpp:215]   --->   Operation 27 'zext' 'zext_ln215' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.14ns)   --->   "%k2 = icmp_ult  i64 %sub_ln213, i64 %zext_ln215" [./intx/int128.hpp:215]   --->   Operation 28 'icmp' 'k2' <Predicate = (!icmp_ln211)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.14ns)   --->   "%k_14 = or i1 %k1, i1 %k2" [./intx/int128.hpp:217]   --->   Operation 29 'or' 'k_14' <Predicate = (!icmp_ln211)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZN4intx4uintILj256EEC2Ev.exit.i.i.i"   --->   Operation 30 'br' 'br_ln0' <Predicate = (!icmp_ln211)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.50ns)   --->   "%br_ln285 = br i1 %k, void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit, void %branch0.preheader" [./intx/intx.hpp:285]   --->   Operation 31 'br' 'br_ln285' <Predicate = (icmp_ln211)> <Delay = 0.50>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%r_word_num_bits_0_0 = alloca i32 1"   --->   Operation 32 'alloca' 'r_word_num_bits_0_0' <Predicate = (icmp_ln211 & k)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%r_word_num_bits_1_0 = alloca i32 1"   --->   Operation 33 'alloca' 'r_word_num_bits_1_0' <Predicate = (icmp_ln211 & k)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%r_word_num_bits_2_0 = alloca i32 1"   --->   Operation 34 'alloca' 'r_word_num_bits_2_0' <Predicate = (icmp_ln211 & k)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%r_word_num_bits_3_0 = alloca i32 1"   --->   Operation 35 'alloca' 'r_word_num_bits_3_0' <Predicate = (icmp_ln211 & k)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.46ns)   --->   "%br_ln0 = br void %branch0"   --->   Operation 36 'br' 'br_ln0' <Predicate = (icmp_ln211 & k)> <Delay = 0.46>

State 3 <SV = 2> <Delay = 1.74>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%phi_ln29 = phi i2 %add_ln29, void %branch0, i2 0, void %branch0.preheader" [./intx/intx.hpp:29]   --->   Operation 37 'phi' 'phi_ln29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.62ns)   --->   "%add_ln29 = add i2 %phi_ln29, i2 1" [./intx/intx.hpp:29]   --->   Operation 38 'add' 'add_ln29' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%r_word_num_bits_0_0_load = load i64 %r_word_num_bits_0_0"   --->   Operation 39 'load' 'r_word_num_bits_0_0_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%r_word_num_bits_1_0_load = load i64 %r_word_num_bits_1_0"   --->   Operation 40 'load' 'r_word_num_bits_1_0_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%r_word_num_bits_2_0_load = load i64 %r_word_num_bits_2_0"   --->   Operation 41 'load' 'r_word_num_bits_2_0_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%r_word_num_bits_3_0_load = load i64 %r_word_num_bits_3_0"   --->   Operation 42 'load' 'r_word_num_bits_3_0_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.54ns)   --->   "%r_word_num_bits_0_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 0, i64 %r_word_num_bits_0_0_load, i64 %r_word_num_bits_0_0_load, i64 %r_word_num_bits_0_0_load, i2 %phi_ln29" [./intx/intx.hpp:29]   --->   Operation 43 'mux' 'r_word_num_bits_0_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.54ns)   --->   "%r_word_num_bits_1_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %r_word_num_bits_1_0_load, i64 0, i64 %r_word_num_bits_1_0_load, i64 %r_word_num_bits_1_0_load, i2 %phi_ln29" [./intx/intx.hpp:29]   --->   Operation 44 'mux' 'r_word_num_bits_1_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.54ns)   --->   "%r_word_num_bits_2_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %r_word_num_bits_2_0_load, i64 %r_word_num_bits_2_0_load, i64 0, i64 %r_word_num_bits_2_0_load, i2 %phi_ln29" [./intx/intx.hpp:29]   --->   Operation 45 'mux' 'r_word_num_bits_2_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.54ns)   --->   "%r_word_num_bits_3_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %r_word_num_bits_3_0_load, i64 %r_word_num_bits_3_0_load, i64 %r_word_num_bits_3_0_load, i64 0, i2 %phi_ln29" [./intx/intx.hpp:29]   --->   Operation 46 'mux' 'r_word_num_bits_3_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.39ns)   --->   "%icmp_ln29 = icmp_eq  i2 %phi_ln29, i2 3" [./intx/intx.hpp:29]   --->   Operation 47 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%empty_154 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 48 'speclooptripcount' 'empty_154' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %r_word_num_bits_3_1, i64 %r_word_num_bits_3_0" [./intx/intx.hpp:29]   --->   Operation 49 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %r_word_num_bits_2_1, i64 %r_word_num_bits_2_0" [./intx/intx.hpp:29]   --->   Operation 50 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %r_word_num_bits_1_1, i64 %r_word_num_bits_1_0" [./intx/intx.hpp:29]   --->   Operation 51 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %r_word_num_bits_0_1, i64 %r_word_num_bits_0_0" [./intx/intx.hpp:29]   --->   Operation 52 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29, void %branch0, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i" [./intx/intx.hpp:29]   --->   Operation 53 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln247 = zext i6 %s" [./intx/intx.hpp:247]   --->   Operation 54 'zext' 'zext_ln247' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i58 @_ssdm_op_PartSelect.i58.i64.i32.i32, i64 %p_read_12, i32 6, i32 63" [./intx/intx.hpp:248]   --->   Operation 55 'partselect' 'trunc_ln' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln248 = zext i58 %trunc_ln" [./intx/intx.hpp:248]   --->   Operation 56 'zext' 'zext_ln248' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (1.33ns)   --->   "%sub_i_i = sub i59 4, i59 %zext_ln248" [./intx/intx.hpp:248]   --->   Operation 57 'sub' 'sub_i_i' <Predicate = (icmp_ln29)> <Delay = 1.33> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%sub_i_i_cast = sext i59 %sub_i_i" [./intx/intx.hpp:248]   --->   Operation 58 'sext' 'sub_i_i_cast' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.14ns)   --->   "%empty_155 = xor i6 %s, i6 63"   --->   Operation 59 'xor' 'empty_155' <Predicate = (icmp_ln29)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln252 = zext i6 %empty_155" [./intx/intx.hpp:252]   --->   Operation 60 'zext' 'zext_ln252' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (1.13ns)   --->   "%icmp_ln252 = icmp_eq  i58 %trunc_ln, i58 4" [./intx/intx.hpp:252]   --->   Operation 61 'icmp' 'icmp_ln252' <Predicate = (icmp_ln29)> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.50ns)   --->   "%br_ln252 = br i1 %icmp_ln252, void %.lr.ph.i.i.preheader, void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit" [./intx/intx.hpp:252]   --->   Operation 62 'br' 'br_ln252' <Predicate = (icmp_ln29)> <Delay = 0.50>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%r_word_num_bits_0_2 = alloca i32 1"   --->   Operation 63 'alloca' 'r_word_num_bits_0_2' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%r_word_num_bits_1_2 = alloca i32 1"   --->   Operation 64 'alloca' 'r_word_num_bits_1_2' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%r_word_num_bits_2_2 = alloca i32 1"   --->   Operation 65 'alloca' 'r_word_num_bits_2_2' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%r_word_num_bits_3_2 = alloca i32 1"   --->   Operation 66 'alloca' 'r_word_num_bits_3_2' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln50_18 = trunc i19 %x_read" [./intx/intx.hpp:50]   --->   Operation 67 'trunc' 'trunc_ln50_18' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%trunc_ln30 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %p_read_12, i32 6, i32 7" [./intx/intx.hpp:254]   --->   Operation 68 'partselect' 'trunc_ln30' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.46ns)   --->   "%store_ln29 = store i64 %r_word_num_bits_3_1, i64 %r_word_num_bits_3_2" [./intx/intx.hpp:29]   --->   Operation 69 'store' 'store_ln29' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.46>
ST_3 : Operation 70 [1/1] (0.46ns)   --->   "%store_ln29 = store i64 %r_word_num_bits_2_1, i64 %r_word_num_bits_2_2" [./intx/intx.hpp:29]   --->   Operation 70 'store' 'store_ln29' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.46>
ST_3 : Operation 71 [1/1] (0.46ns)   --->   "%store_ln29 = store i64 %r_word_num_bits_1_1, i64 %r_word_num_bits_1_2" [./intx/intx.hpp:29]   --->   Operation 71 'store' 'store_ln29' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.46>
ST_3 : Operation 72 [1/1] (0.46ns)   --->   "%store_ln29 = store i64 %r_word_num_bits_0_1, i64 %r_word_num_bits_0_2" [./intx/intx.hpp:29]   --->   Operation 72 'store' 'store_ln29' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.46>
ST_3 : Operation 73 [1/1] (0.46ns)   --->   "%br_ln0 = br void %.lr.ph.i.i"   --->   Operation 73 'br' 'br_ln0' <Predicate = (icmp_ln29 & !icmp_ln252)> <Delay = 0.46>

State 4 <SV = 3> <Delay = 2.42>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%i_58 = phi i64 %i_59, void %.split32, i64 0, void %.lr.ph.i.i.preheader"   --->   Operation 74 'phi' 'i_58' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (1.36ns)   --->   "%i_59 = add i64 %i_58, i64 1" [./intx/intx.hpp:252]   --->   Operation 75 'add' 'i_59' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (1.14ns)   --->   "%icmp_ln252_2 = icmp_eq  i64 %i_58, i64 %sub_i_i_cast" [./intx/intx.hpp:252]   --->   Operation 76 'icmp' 'icmp_ln252_2' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln252 = br i1 %icmp_ln252_2, void %.split, void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit.loopexit" [./intx/intx.hpp:252]   --->   Operation 77 'br' 'br_ln252' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln50_19 = trunc i64 %i_58" [./intx/intx.hpp:50]   --->   Operation 78 'trunc' 'trunc_ln50_19' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i19 @_ssdm_op_BitConcatenate.i19.i16.i3, i16 %trunc_ln50_19, i3 0" [./intx/intx.hpp:50]   --->   Operation 79 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln50_20 = trunc i64 %i_58" [./intx/intx.hpp:50]   --->   Operation 80 'trunc' 'trunc_ln50_20' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (1.12ns)   --->   "%add_ln50 = add i19 %shl_ln, i19 %x_read" [./intx/intx.hpp:50]   --->   Operation 81 'add' 'add_ln50' <Predicate = (!icmp_ln252_2)> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%lshr_ln254_1 = partselect i14 @_ssdm_op_PartSelect.i14.i19.i32.i32, i19 %add_ln50, i32 5, i32 18" [./intx/intx.hpp:254]   --->   Operation 82 'partselect' 'lshr_ln254_1' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln254 = zext i14 %lshr_ln254_1" [./intx/intx.hpp:254]   --->   Operation 83 'zext' 'zext_ln254' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%state_addr = getelementptr i256 %state, i64 0, i64 %zext_ln254" [./intx/intx.hpp:254]   --->   Operation 84 'getelementptr' 'state_addr' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_4 : Operation 85 [2/2] (1.29ns)   --->   "%state_load = load i14 %state_addr" [./intx/intx.hpp:254]   --->   Operation 85 'load' 'state_load' <Predicate = (!icmp_ln252_2)> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 256> <Depth = 8986> <RAM>
ST_4 : Operation 86 [1/1] (0.62ns)   --->   "%add_ln48 = add i2 %trunc_ln50_20, i2 %trunc_ln30" [./intx/intx.hpp:48]   --->   Operation 86 'add' 'add_ln48' <Predicate = (!icmp_ln252_2)> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 87 [1/1] (0.72ns)   --->   "%switch_ln254 = switch i2 %add_ln48, void %branch7, i2 0, void %.split..split32_crit_edge, i2 1, void %branch5, i2 2, void %branch6" [./intx/intx.hpp:254]   --->   Operation 87 'switch' 'switch_ln254' <Predicate = (!icmp_ln252_2)> <Delay = 0.72>

State 5 <SV = 4> <Delay = 4.83>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%carry = phi i63 %trunc_ln31, void %.split32, i63 0, void %.lr.ph.i.i.preheader" [./intx/intx.hpp:252]   --->   Operation 88 'phi' 'carry' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%r_word_num_bits_0_2_load = load i64 %r_word_num_bits_0_2"   --->   Operation 89 'load' 'r_word_num_bits_0_2_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%r_word_num_bits_1_2_load = load i64 %r_word_num_bits_1_2"   --->   Operation 90 'load' 'r_word_num_bits_1_2_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%r_word_num_bits_2_2_load = load i64 %r_word_num_bits_2_2"   --->   Operation 91 'load' 'r_word_num_bits_2_2_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "%r_word_num_bits_3_2_load = load i64 %r_word_num_bits_3_2"   --->   Operation 92 'load' 'r_word_num_bits_3_2_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 93 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln50_7 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %trunc_ln50_20, i3 0" [./intx/intx.hpp:50]   --->   Operation 94 'bitconcatenate' 'trunc_ln50_7' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_5 : Operation 95 [1/2] (1.29ns)   --->   "%state_load = load i14 %state_addr" [./intx/intx.hpp:254]   --->   Operation 95 'load' 'state_load' <Predicate = (!icmp_ln252_2)> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 256> <Depth = 8986> <RAM>
ST_5 : Operation 96 [1/1] (0.82ns)   --->   "%add_ln254 = add i5 %trunc_ln50_7, i5 %trunc_ln50_18" [./intx/intx.hpp:254]   --->   Operation 96 'add' 'add_ln254' <Predicate = (!icmp_ln252_2)> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%shl_ln19 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %add_ln254, i3 0" [./intx/intx.hpp:254]   --->   Operation 97 'bitconcatenate' 'shl_ln19' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln254_1 = zext i8 %shl_ln19" [./intx/intx.hpp:254]   --->   Operation 98 'zext' 'zext_ln254_1' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (1.44ns)   --->   "%lshr_ln254 = lshr i256 %state_load, i256 %zext_ln254_1" [./intx/intx.hpp:254]   --->   Operation 99 'lshr' 'lshr_ln254' <Predicate = (!icmp_ln252_2)> <Delay = 1.44> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%trunc_ln254 = trunc i256 %lshr_ln254" [./intx/intx.hpp:254]   --->   Operation 100 'trunc' 'trunc_ln254' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (1.30ns)   --->   "%shl_ln254 = shl i64 %trunc_ln254, i64 %zext_ln247" [./intx/intx.hpp:254]   --->   Operation 101 'shl' 'shl_ln254' <Predicate = (!icmp_ln252_2)> <Delay = 1.30> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%trunc_ln254_1 = trunc i64 %shl_ln254" [./intx/intx.hpp:254]   --->   Operation 102 'trunc' 'trunc_ln254_1' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.33ns)   --->   "%or_ln254 = or i63 %trunc_ln254_1, i63 %carry" [./intx/intx.hpp:254]   --->   Operation 103 'or' 'or_ln254' <Predicate = (!icmp_ln252_2)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_27 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %shl_ln254, i32 63" [./intx/intx.hpp:254]   --->   Operation 104 'bitselect' 'tmp_27' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i1.i63, i1 %tmp_27, i63 %or_ln254" [./intx/intx.hpp:254]   --->   Operation 105 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.46ns)   --->   "%store_ln254 = store i64 %or_ln, i64 %r_word_num_bits_2_2" [./intx/intx.hpp:254]   --->   Operation 106 'store' 'store_ln254' <Predicate = (!icmp_ln252_2 & add_ln48 == 2)> <Delay = 0.46>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%br_ln254 = br void %.split32" [./intx/intx.hpp:254]   --->   Operation 107 'br' 'br_ln254' <Predicate = (!icmp_ln252_2 & add_ln48 == 2)> <Delay = 0.00>
ST_5 : Operation 108 [1/1] (0.46ns)   --->   "%store_ln254 = store i64 %or_ln, i64 %r_word_num_bits_1_2" [./intx/intx.hpp:254]   --->   Operation 108 'store' 'store_ln254' <Predicate = (!icmp_ln252_2 & add_ln48 == 1)> <Delay = 0.46>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "%br_ln254 = br void %.split32" [./intx/intx.hpp:254]   --->   Operation 109 'br' 'br_ln254' <Predicate = (!icmp_ln252_2 & add_ln48 == 1)> <Delay = 0.00>
ST_5 : Operation 110 [1/1] (0.46ns)   --->   "%store_ln254 = store i64 %or_ln, i64 %r_word_num_bits_0_2" [./intx/intx.hpp:254]   --->   Operation 110 'store' 'store_ln254' <Predicate = (!icmp_ln252_2 & add_ln48 == 0)> <Delay = 0.46>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%br_ln254 = br void %.split32" [./intx/intx.hpp:254]   --->   Operation 111 'br' 'br_ln254' <Predicate = (!icmp_ln252_2 & add_ln48 == 0)> <Delay = 0.00>
ST_5 : Operation 112 [1/1] (0.46ns)   --->   "%store_ln254 = store i64 %or_ln, i64 %r_word_num_bits_3_2" [./intx/intx.hpp:254]   --->   Operation 112 'store' 'store_ln254' <Predicate = (!icmp_ln252_2 & add_ln48 == 3)> <Delay = 0.46>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%br_ln254 = br void %.split32" [./intx/intx.hpp:254]   --->   Operation 113 'br' 'br_ln254' <Predicate = (!icmp_ln252_2 & add_ln48 == 3)> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (1.30ns)   --->   "%lshr_ln255 = lshr i64 %trunc_ln254, i64 %zext_ln252" [./intx/intx.hpp:255]   --->   Operation 114 'lshr' 'lshr_ln255' <Predicate = (!icmp_ln252_2)> <Delay = 1.30> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%trunc_ln31 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %lshr_ln255, i32 1, i32 63" [./intx/intx.hpp:252]   --->   Operation 115 'partselect' 'trunc_ln31' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph.i.i"   --->   Operation 116 'br' 'br_ln0' <Predicate = (!icmp_ln252_2)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 3.23>
ST_6 : Operation 117 [1/1] (0.50ns)   --->   "%br_ln0 = br void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit"   --->   Operation 117 'br' 'br_ln0' <Predicate = (k & !icmp_ln252)> <Delay = 0.50>
ST_6 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node shl_ln885_2)   --->   "%r_word_num_bits_3_4 = phi i64 %r_word_num_bits_3_1, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i, i64 0, void %_ZN4intxltILj256EEEbRKNS_4uintIXT_EEES4_.exit.i, i64 %r_word_num_bits_3_2_load, void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit.loopexit" [./intx/intx.hpp:29]   --->   Operation 118 'phi' 'r_word_num_bits_3_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node shl_ln885_2)   --->   "%r_word_num_bits_2_4 = phi i64 %r_word_num_bits_2_1, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i, i64 0, void %_ZN4intxltILj256EEEbRKNS_4uintIXT_EEES4_.exit.i, i64 %r_word_num_bits_2_2_load, void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit.loopexit" [./intx/intx.hpp:29]   --->   Operation 119 'phi' 'r_word_num_bits_2_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node shl_ln885_2)   --->   "%r_word_num_bits_1_4 = phi i64 %r_word_num_bits_1_1, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i, i64 0, void %_ZN4intxltILj256EEEbRKNS_4uintIXT_EEES4_.exit.i, i64 %r_word_num_bits_1_2_load, void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit.loopexit" [./intx/intx.hpp:29]   --->   Operation 120 'phi' 'r_word_num_bits_1_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node shl_ln885_2)   --->   "%r_word_num_bits_0_4 = phi i64 %r_word_num_bits_0_1, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i, i64 0, void %_ZN4intxltILj256EEEbRKNS_4uintIXT_EEES4_.exit.i, i64 %r_word_num_bits_0_2_load, void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit.loopexit" [./intx/intx.hpp:29]   --->   Operation 121 'phi' 'r_word_num_bits_0_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node shl_ln885_2)   --->   "%or_ln885_2 = bitconcatenate i256 @_ssdm_op_BitConcatenate.i256.i64.i64.i64.i64, i64 %r_word_num_bits_3_4, i64 %r_word_num_bits_2_4, i64 %r_word_num_bits_1_4, i64 %r_word_num_bits_0_4" [./intx/intx.hpp:885]   --->   Operation 122 'bitconcatenate' 'or_ln885_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node shl_ln885_2)   --->   "%zext_ln885 = zext i256 %or_ln885_2" [./intx/intx.hpp:885]   --->   Operation 123 'zext' 'zext_ln885' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 124 [1/1] (0.00ns)   --->   "%trunc_ln885 = trunc i19 %x_read" [./intx/intx.hpp:885]   --->   Operation 124 'trunc' 'trunc_ln885' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln885_1 = zext i5 %trunc_ln885" [./intx/intx.hpp:885]   --->   Operation 125 'zext' 'zext_ln885_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 126 [1/1] (1.29ns)   --->   "%shl_ln885 = shl i63 4294967295, i63 %zext_ln885_1" [./intx/intx.hpp:885]   --->   Operation 126 'shl' 'shl_ln885' <Predicate = true> <Delay = 1.29> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node shl_ln885_2)   --->   "%shl_ln885_1 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %trunc_ln885, i3 0" [./intx/intx.hpp:885]   --->   Operation 127 'bitconcatenate' 'shl_ln885_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node shl_ln885_2)   --->   "%zext_ln885_2 = zext i8 %shl_ln885_1" [./intx/intx.hpp:885]   --->   Operation 128 'zext' 'zext_ln885_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 129 [1/1] (1.44ns) (out node of the LUT)   --->   "%shl_ln885_2 = shl i504 %zext_ln885, i504 %zext_ln885_2" [./intx/intx.hpp:885]   --->   Operation 129 'shl' 'shl_ln885_2' <Predicate = true> <Delay = 1.44> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 130 [1/1] (0.72ns)   --->   "%icmp_ln885 = icmp_eq  i5 %trunc_ln885, i5 0" [./intx/intx.hpp:885]   --->   Operation 130 'icmp' 'icmp_ln885' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 131 [1/1] (0.00ns)   --->   "%trunc_ln885_3 = partselect i14 @_ssdm_op_PartSelect.i14.i19.i32.i32, i19 %x_read, i32 5, i32 18" [./intx/intx.hpp:885]   --->   Operation 131 'partselect' 'trunc_ln885_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln885_3 = zext i14 %trunc_ln885_3" [./intx/intx.hpp:885]   --->   Operation 132 'zext' 'zext_ln885_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 133 [1/1] (0.00ns)   --->   "%trunc_ln885_1 = trunc i63 %shl_ln885" [./intx/intx.hpp:885]   --->   Operation 133 'trunc' 'trunc_ln885_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 134 [1/1] (0.00ns)   --->   "%trunc_ln885_2 = trunc i504 %shl_ln885_2" [./intx/intx.hpp:885]   --->   Operation 134 'trunc' 'trunc_ln885_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 135 [1/1] (0.00ns)   --->   "%state_addr_18 = getelementptr i256 %state, i64 0, i64 %zext_ln885_3" [./intx/intx.hpp:885]   --->   Operation 135 'getelementptr' 'state_addr_18' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 136 [1/1] (1.29ns)   --->   "%store_ln885 = store void @_ssdm_op_Write.bram.p0L_a4i64packedL, i14 %state_addr_18, i256 %trunc_ln885_2, i32 %trunc_ln885_1" [./intx/intx.hpp:885]   --->   Operation 136 'store' 'store_ln885' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 256> <Depth = 8986> <RAM>
ST_6 : Operation 137 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i31 @_ssdm_op_PartSelect.i31.i63.i32.i32, i63 %shl_ln885, i32 32, i32 62" [./intx/intx.hpp:885]   --->   Operation 137 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln885_4 = zext i31 %tmp_21" [./intx/intx.hpp:885]   --->   Operation 138 'zext' 'zext_ln885_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_22 = partselect i248 @_ssdm_op_PartSelect.i248.i504.i32.i32, i504 %shl_ln885_2, i32 256, i32 503" [./intx/intx.hpp:885]   --->   Operation 139 'partselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 140 [1/1] (0.00ns)   --->   "%zext_ln885_6 = zext i248 %tmp_22" [./intx/intx.hpp:885]   --->   Operation 140 'zext' 'zext_ln885_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 141 [1/1] (1.05ns)   --->   "%add_ln885 = add i14 %trunc_ln885_3, i14 1" [./intx/intx.hpp:885]   --->   Operation 141 'add' 'add_ln885' <Predicate = true> <Delay = 1.05> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln885_5 = zext i14 %add_ln885" [./intx/intx.hpp:885]   --->   Operation 142 'zext' 'zext_ln885_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 143 [1/1] (0.00ns)   --->   "%state_addr_19 = getelementptr i256 %state, i64 0, i64 %zext_ln885_5" [./intx/intx.hpp:885]   --->   Operation 143 'getelementptr' 'state_addr_19' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 144 [1/1] (0.00ns)   --->   "%br_ln885 = br i1 %icmp_ln885, void, void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit._crit_edge" [./intx/intx.hpp:885]   --->   Operation 144 'br' 'br_ln885' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 145 [1/1] (1.29ns)   --->   "%store_ln885 = store void @_ssdm_op_Write.bram.p0L_a4i64packedL, i14 %state_addr_19, i256 %zext_ln885_6, i32 %zext_ln885_4" [./intx/intx.hpp:885]   --->   Operation 145 'store' 'store_ln885' <Predicate = (!icmp_ln885)> <Delay = 1.29> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 256> <Depth = 8986> <RAM>
ST_6 : Operation 146 [1/1] (0.00ns)   --->   "%br_ln885 = br void %_ZN4intxlsILj256ENS_4uintILj256EEEvEENS1_IXT_EEERKS3_RKT0_.exit._crit_edge" [./intx/intx.hpp:885]   --->   Operation 146 'br' 'br_ln885' <Predicate = (!icmp_ln885)> <Delay = 0.00>
ST_6 : Operation 147 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 147 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', ./intx/int128.hpp:211) [17]  (0.46 ns)

 <State 2>: 3.2ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./intx/int128.hpp:211) [17]  (0 ns)
	'mux' operation ('tmp_s', ./intx/int128.hpp:213) [26]  (0.544 ns)
	'sub' operation ('sub_ln213', ./intx/int128.hpp:213) [27]  (1.36 ns)
	'icmp' operation ('k2', ./intx/int128.hpp:215) [30]  (1.14 ns)
	'or' operation ('k', ./intx/int128.hpp:217) [31]  (0.148 ns)

 <State 3>: 1.75ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln252', ./intx/intx.hpp:252) [67]  (1.14 ns)
	multiplexor before 'phi' operation ('r_word_num_bits_3_4', ./intx/intx.hpp:29) with incoming values : ('r_word_num_bits_3_1', ./intx/intx.hpp:29) ('r_word_num_bits_3_2_load') [133]  (0.502 ns)
	blocking operation 0.106 ns on control path)

 <State 4>: 2.42ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./intx/intx.hpp:252) [82]  (0 ns)
	'add' operation ('add_ln50', ./intx/intx.hpp:50) [97]  (1.12 ns)
	'getelementptr' operation ('state_addr', ./intx/intx.hpp:254) [100]  (0 ns)
	'load' operation ('state_load', ./intx/intx.hpp:254) on array 'state' [101]  (1.3 ns)

 <State 5>: 4.84ns
The critical path consists of the following:
	'load' operation ('state_load', ./intx/intx.hpp:254) on array 'state' [101]  (1.3 ns)
	'lshr' operation ('lshr_ln254', ./intx/intx.hpp:254) [105]  (1.44 ns)
	'shl' operation ('shl_ln254', ./intx/intx.hpp:254) [107]  (1.31 ns)
	'or' operation ('or_ln254', ./intx/intx.hpp:254) [109]  (0.331 ns)
	'store' operation ('store_ln254', ./intx/intx.hpp:254) of variable 'or_ln', ./intx/intx.hpp:254 on local variable 'r_word_num_bits_3_2' [124]  (0.46 ns)

 <State 6>: 3.24ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('r_word_num_bits_2_4', ./intx/intx.hpp:29) with incoming values : ('r_word_num_bits_2_1', ./intx/intx.hpp:29) ('r_word_num_bits_2_2_load') [134]  (0.502 ns)
	'phi' operation ('r_word_num_bits_2_4', ./intx/intx.hpp:29) with incoming values : ('r_word_num_bits_2_1', ./intx/intx.hpp:29) ('r_word_num_bits_2_2_load') [134]  (0 ns)
	'shl' operation ('shl_ln885_2', ./intx/intx.hpp:885) [144]  (1.44 ns)
	'store' operation ('store_ln885', ./intx/intx.hpp:885) of constant <constant:_ssdm_op_Write.bram.p0L_a4i64packedL> on array 'state' [161]  (1.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

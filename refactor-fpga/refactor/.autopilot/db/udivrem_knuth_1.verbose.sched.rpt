

================================================================
== Vitis HLS Report for 'udivrem_knuth_1'
================================================================
* Date:           Mon Aug 23 09:42:21 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        refactor-fpga
* Solution:       refactor (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.832 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- Loop 1             |        2|        2|         1|          -|          -|      2|        no|
        |- VITIS_LOOP_618_1   |        ?|        ?|   11 ~ 29|          -|          -|      ?|        no|
        | + VITIS_LOOP_586_1  |        2|        7|         2|          1|          1|  2 ~ 7|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 30
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 24 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 12 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 28 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 27 24 
24 --> 26 25 
25 --> 24 
26 --> 27 
27 --> 16 
28 --> 29 
29 --> 30 
30 --> 27 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.44>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%reuse_addr_reg = alloca i32 1"   --->   Operation 31 'alloca' 'reuse_addr_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%reuse_reg = alloca i32 1"   --->   Operation 32 'alloca' 'reuse_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%dlen_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %dlen"   --->   Operation 33 'read' 'dlen_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%empty = trunc i4 %dlen_read"   --->   Operation 34 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.71ns)   --->   "%add_ln616_1 = add i3 %empty, i3 7" [./intx/intx.hpp:616]   --->   Operation 35 'add' 'add_ln616_1' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln616_1 = zext i3 %add_ln616_1" [./intx/intx.hpp:616]   --->   Operation 36 'zext' 'zext_ln616_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%d_addr_1 = getelementptr i64 %d, i64 0, i64 %zext_ln616_1" [./intx/intx.hpp:616]   --->   Operation 37 'getelementptr' 'd_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [2/2] (0.73ns)   --->   "%divisor_2 = load i3 %d_addr_1" [./intx/intx.hpp:616]   --->   Operation 38 'load' 'divisor_2' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>

State 2 <SV = 1> <Delay = 2.02>
ST_2 : Operation 39 [1/2] (0.73ns)   --->   "%divisor_2 = load i3 %d_addr_1" [./intx/intx.hpp:616]   --->   Operation 39 'load' 'divisor_2' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%d0 = trunc i64 %divisor_2" [./intx/intx.hpp:616]   --->   Operation 40 'trunc' 'd0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %divisor_2, i32 55, i32 62" [./intx/int128.hpp:608->./intx/int128.hpp:627]   --->   Operation 41 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln609 = zext i8 %trunc_ln" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 42 'zext' 'zext_ln609' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%intx_internal_reciprocal_table_addr = getelementptr i11 %intx_internal_reciprocal_table, i64 0, i64 %zext_ln609" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 43 'getelementptr' 'intx_internal_reciprocal_table_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (1.29ns)   --->   "%v0 = load i8 %intx_internal_reciprocal_table_addr" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 44 'load' 'v0' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 11> <Depth = 256> <ROM>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i40 @_ssdm_op_PartSelect.i40.i64.i32.i32, i64 %divisor_2, i32 24, i32 63" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 45 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %divisor_2, i32 1, i32 63" [./intx/int128.hpp:617->./intx/int128.hpp:627]   --->   Operation 46 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.99>
ST_3 : Operation 47 [1/2] (1.29ns)   --->   "%v0 = load i8 %intx_internal_reciprocal_table_addr" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 47 'load' 'v0' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 11> <Depth = 256> <ROM>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln609_1 = zext i11 %v0" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 48 'zext' 'zext_ln609_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [4/4] (0.69ns) (root node of the DSP)   --->   "%mul_ln612 = mul i22 %zext_ln609_1, i22 %zext_ln609_1" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 49 'mul' 'mul_ln612' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 0.69>
ST_4 : Operation 50 [3/4] (0.69ns) (root node of the DSP)   --->   "%mul_ln612 = mul i22 %zext_ln609_1, i22 %zext_ln609_1" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 50 'mul' 'mul_ln612' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 0.69>
ST_5 : Operation 51 [2/4] (0.69ns) (root node of the DSP)   --->   "%mul_ln612 = mul i22 %zext_ln609_1, i22 %zext_ln609_1" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 51 'mul' 'mul_ln612' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 6.31>
ST_6 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln611 = zext i40 %trunc_ln1" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 52 'zext' 'zext_ln611' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 53 [1/1] (1.18ns)   --->   "%d40 = add i41 %zext_ln611, i41 1" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 53 'add' 'd40' <Predicate = true> <Delay = 1.18> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln611_2 = zext i41 %d40" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 54 'zext' 'zext_ln611_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i11.i11, i11 %v0, i11 0" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 55 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 56 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln612 = mul i22 %zext_ln609_1, i22 %zext_ln609_1" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 56 'mul' 'mul_ln612' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln612 = zext i22 %mul_ln612" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 57 'zext' 'zext_ln612' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 58 [1/1] (4.00ns)   --->   "%mul_ln612_1 = mul i62 %zext_ln611_2, i62 %zext_ln612" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 58 'mul' 'mul_ln612_1' <Predicate = true> <Delay = 4.00> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i22 @_ssdm_op_PartSelect.i22.i62.i32.i32, i62 %mul_ln612_1, i32 40, i32 61" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 59 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln612_1 = zext i22 %tmp_1" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 60 'zext' 'zext_ln612_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (1.12ns)   --->   "%add_ln612 = add i22 %shl_ln, i22 4194303" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 61 'add' 'add_ln612' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln612_2 = zext i22 %add_ln612" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 62 'zext' 'zext_ln612_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (1.12ns)   --->   "%v1 = sub i23 %zext_ln612_2, i23 %zext_ln612_1" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 63 'sub' 'v1' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.00>
ST_7 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln611_1 = zext i41 %d40" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 64 'zext' 'zext_ln611_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 65 [1/1] (0.00ns)   --->   "%sext_ln612 = sext i23 %v1" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 65 'sext' 'sext_ln612' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln612_3 = zext i32 %sext_ln612" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 66 'zext' 'zext_ln612_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 67 [1/1] (4.00ns)   --->   "%mul_ln614 = mul i64 %zext_ln611_1, i64 %zext_ln612_3" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 67 'mul' 'mul_ln614' <Predicate = true> <Delay = 4.00> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.83>
ST_8 : Operation 68 [1/1] (1.36ns)   --->   "%sub_ln614 = sub i64 1152921504606846976, i64 %mul_ln614" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 68 'sub' 'sub_ln614' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 69 [1/1] (5.47ns)   --->   "%mul_ln614_1 = mul i64 %sub_ln614, i64 %zext_ln612_3" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 69 'mul' 'mul_ln614_1' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 70 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i17 @_ssdm_op_PartSelect.i17.i64.i32.i32, i64 %mul_ln614_1, i32 47, i32 63" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 70 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 6.82>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i36 @_ssdm_op_BitConcatenate.i36.i23.i13, i23 %v1, i13 0" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 71 'bitconcatenate' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 72 [1/1] (0.00ns)   --->   "%sext_ln614 = sext i36 %tmp_2" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 72 'sext' 'sext_ln614' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln614 = zext i45 %sext_ln614" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 73 'zext' 'zext_ln614' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln614_1 = zext i17 %trunc_ln2" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 74 'zext' 'zext_ln614_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 75 [1/1] (1.24ns)   --->   "%v2 = add i46 %zext_ln614_1, i46 %zext_ln614" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 75 'add' 'v2' <Predicate = true> <Delay = 1.24> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln614_2 = zext i46 %v2" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 76 'zext' 'zext_ln614_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln616_2 = zext i1 %d0" [./intx/int128.hpp:616->./intx/int128.hpp:627]   --->   Operation 77 'zext' 'zext_ln616_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln617 = zext i63 %lshr_ln" [./intx/int128.hpp:617->./intx/int128.hpp:627]   --->   Operation 78 'zext' 'zext_ln617' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 79 [1/1] (1.35ns)   --->   "%d63 = add i64 %zext_ln617, i64 %zext_ln616_2" [./intx/int128.hpp:617->./intx/int128.hpp:627]   --->   Operation 79 'add' 'd63' <Predicate = true> <Delay = 1.35> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 80 [1/1] (5.47ns)   --->   "%mul_ln618 = mul i64 %zext_ln614_2, i64 %d63" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 80 'mul' 'mul_ln618' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln619 = trunc i46 %v2" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 81 'trunc' 'trunc_ln619' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 6.83>
ST_10 : Operation 82 [1/1] (0.80ns)   --->   "%add_ln616 = add i4 %dlen_read, i4 14" [./intx/intx.hpp:616]   --->   Operation 82 'add' 'add_ln616' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln616 = zext i4 %add_ln616" [./intx/intx.hpp:616]   --->   Operation 83 'zext' 'zext_ln616' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 84 [1/1] (0.00ns)   --->   "%d_addr = getelementptr i64 %d, i64 0, i64 %zext_ln616" [./intx/intx.hpp:616]   --->   Operation 84 'getelementptr' 'd_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 85 [2/2] (0.73ns)   --->   "%divisor = load i3 %d_addr" [./intx/intx.hpp:616]   --->   Operation 85 'load' 'divisor' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_10 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node e_2)   --->   "%trunc_ln3 = partselect i45 @_ssdm_op_PartSelect.i45.i46.i32.i32, i46 %v2, i32 1, i32 45" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 86 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node e_2)   --->   "%select_ln618 = select i1 %d0, i45 35184372088831, i45 0" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 87 'select' 'select_ln618' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node e_2)   --->   "%and_ln618 = and i45 %trunc_ln3, i45 %select_ln618" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 88 'and' 'and_ln618' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node e_2)   --->   "%zext_ln618 = zext i45 %and_ln618" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 89 'zext' 'zext_ln618' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 90 [1/1] (1.36ns) (out node of the LUT)   --->   "%e_2 = sub i64 %zext_ln618, i64 %mul_ln618" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 90 'sub' 'e_2' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln397_1 = zext i46 %v2" [./intx/int128.hpp:397]   --->   Operation 91 'zext' 'zext_ln397_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln397_2 = zext i64 %e_2" [./intx/int128.hpp:397]   --->   Operation 92 'zext' 'zext_ln397_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 93 [1/1] (5.47ns)   --->   "%x_1 = mul i110 %zext_ln397_2, i110 %zext_ln397_1" [./intx/int128.hpp:397]   --->   Operation 93 'mul' 'x_1' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i45 @_ssdm_op_PartSelect.i45.i110.i32.i32, i110 %x_1, i32 65, i32 109" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 94 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>

State 11 <SV = 10> <Delay = 6.83>
ST_11 : Operation 95 [1/1] (0.00ns)   --->   "%ulen_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %ulen"   --->   Operation 95 'read' 'ulen_read' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 96 [1/1] (0.00ns)   --->   "%dlen_cast2 = zext i4 %dlen_read"   --->   Operation 96 'zext' 'dlen_cast2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 97 [1/1] (0.00ns)   --->   "%ulen_cast = zext i4 %ulen_read"   --->   Operation 97 'zext' 'ulen_cast' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 98 [1/2] (0.73ns)   --->   "%divisor = load i3 %d_addr" [./intx/intx.hpp:616]   --->   Operation 98 'load' 'divisor' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_11 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln619 = zext i45 %trunc_ln4" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 99 'zext' 'zext_ln619' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 100 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i33.i31, i33 %trunc_ln619, i31 0" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 100 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 101 [1/1] (1.36ns)   --->   "%v3 = add i64 %shl_ln1, i64 %zext_ln619" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 101 'add' 'v3' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln397_3 = zext i64 %v3" [./intx/int128.hpp:397]   --->   Operation 102 'zext' 'zext_ln397_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln397_4 = zext i64 %divisor_2" [./intx/int128.hpp:397]   --->   Operation 103 'zext' 'zext_ln397_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 104 [1/1] (5.47ns)   --->   "%x_3 = mul i128 %zext_ln397_3, i128 %zext_ln397_4" [./intx/int128.hpp:397]   --->   Operation 104 'mul' 'x_3' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 105 [1/1] (0.46ns)   --->   "%br_ln173 = br void %_ZN4intx4uintILj128EEC2Ev.exit.i.i.i" [./intx/int128.hpp:173]   --->   Operation 105 'br' 'br_ln173' <Predicate = true> <Delay = 0.46>

State 12 <SV = 11> <Delay = 6.52>
ST_12 : Operation 106 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_2_i = phi i64 %select_ln177, void %.split.i, i64 0, void %._crit_edge" [./intx/int128.hpp:177]   --->   Operation 106 'phi' 's_word_num_bits_1_2_i' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 107 [1/1] (0.00ns)   --->   "%i_1 = phi i2 %i_2, void %.split.i, i2 0, void %._crit_edge"   --->   Operation 107 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 108 [1/1] (0.00ns)   --->   "%k = phi i1 %k_1, void %.split.i, i1 0, void %._crit_edge"   --->   Operation 108 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 109 [1/1] (0.62ns)   --->   "%i_2 = add i2 %i_1, i2 1" [./intx/int128.hpp:173]   --->   Operation 109 'add' 'i_2' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 110 [1/1] (0.39ns)   --->   "%icmp_ln173 = icmp_eq  i2 %i_1, i2 2" [./intx/int128.hpp:173]   --->   Operation 110 'icmp' 'icmp_ln173' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 111 [1/1] (0.00ns)   --->   "%empty_66 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2"   --->   Operation 111 'speclooptripcount' 'empty_66' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln173 = br i1 %icmp_ln173, void %.split.i, void %reciprocal_2by1.exit_ifconv" [./intx/int128.hpp:173]   --->   Operation 112 'br' 'br_ln173' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 113 [1/1] (0.00ns)   --->   "%trunc_ln117 = trunc i2 %i_1" [./intx/int128.hpp:117]   --->   Operation 113 'trunc' 'trunc_ln117' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_12 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i64 @_ssdm_op_PartSelect.i64.i128.i32.i32, i128 %x_3, i32 64, i32 127" [./intx/int128.hpp:175]   --->   Operation 114 'partselect' 'tmp_4' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_12 : Operation 115 [1/1] (0.00ns)   --->   "%trunc_ln175 = trunc i128 %x_3" [./intx/int128.hpp:175]   --->   Operation 115 'trunc' 'trunc_ln175' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_12 : Operation 116 [1/1] (0.43ns)   --->   "%select_ln175 = select i1 %trunc_ln117, i64 %tmp_4, i64 %trunc_ln175" [./intx/int128.hpp:175]   --->   Operation 116 'select' 'select_ln175' <Predicate = (!icmp_ln173)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node add_ln175)   --->   "%select_ln175_1 = select i1 %trunc_ln117, i64 0, i64 %divisor_2" [./intx/int128.hpp:175]   --->   Operation 117 'select' 'select_ln175_1' <Predicate = (!icmp_ln173)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 118 [1/1] (1.36ns) (out node of the LUT)   --->   "%add_ln175 = add i64 %select_ln175_1, i64 %select_ln175" [./intx/int128.hpp:175]   --->   Operation 118 'add' 'add_ln175' <Predicate = (!icmp_ln173)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 119 [1/1] (1.14ns)   --->   "%k1 = icmp_ult  i64 %add_ln175, i64 %select_ln175" [./intx/int128.hpp:176]   --->   Operation 119 'icmp' 'k1' <Predicate = (!icmp_ln173)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln177 = zext i1 %k" [./intx/int128.hpp:177]   --->   Operation 120 'zext' 'zext_ln177' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_12 : Operation 121 [1/1] (1.36ns)   --->   "%add_ln177 = add i64 %add_ln175, i64 %zext_ln177" [./intx/int128.hpp:177]   --->   Operation 121 'add' 'add_ln177' <Predicate = (!icmp_ln173)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 122 [1/1] (0.43ns)   --->   "%select_ln177 = select i1 %trunc_ln117, i64 %add_ln177, i64 %s_word_num_bits_1_2_i" [./intx/int128.hpp:177]   --->   Operation 122 'select' 'select_ln177' <Predicate = (!icmp_ln173)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 123 [1/1] (1.14ns)   --->   "%icmp_ln178 = icmp_ult  i64 %add_ln177, i64 %zext_ln177" [./intx/int128.hpp:178]   --->   Operation 123 'icmp' 'icmp_ln178' <Predicate = (!icmp_ln173)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 124 [1/1] (0.14ns)   --->   "%k_1 = or i1 %icmp_ln178, i1 %k1" [./intx/int128.hpp:178]   --->   Operation 124 'or' 'k_1' <Predicate = (!icmp_ln173)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 125 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZN4intx4uintILj128EEC2Ev.exit.i.i.i"   --->   Operation 125 'br' 'br_ln0' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_12 : Operation 126 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln621 = sub i64 %v3, i64 %divisor_2" [./intx/int128.hpp:621->./intx/int128.hpp:627]   --->   Operation 126 'sub' 'sub_ln621' <Predicate = (icmp_ln173)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 127 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%v4 = sub i64 %sub_ln621, i64 %s_word_num_bits_1_2_i" [./intx/int128.hpp:621->./intx/int128.hpp:627]   --->   Operation 127 'sub' 'v4' <Predicate = (icmp_ln173)> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 128 [1/1] (5.47ns)   --->   "%p = mul i64 %divisor_2, i64 %v4" [./intx/int128.hpp:628]   --->   Operation 128 'mul' 'p' <Predicate = (icmp_ln173)> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 129 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln618 = add i5 %ulen_cast, i5 31" [./intx/intx.hpp:618]   --->   Operation 129 'add' 'add_ln618' <Predicate = (icmp_ln173)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 130 [1/1] (0.60ns) (root node of TernaryAdder)   --->   "%sub_ln618 = sub i5 %add_ln618, i5 %dlen_cast2" [./intx/intx.hpp:618]   --->   Operation 130 'sub' 'sub_ln618' <Predicate = (icmp_ln173)> <Delay = 0.60> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 13 <SV = 12> <Delay = 4.45>
ST_13 : Operation 131 [1/1] (1.36ns)   --->   "%p_1 = add i64 %divisor, i64 %p" [./intx/int128.hpp:629]   --->   Operation 131 'add' 'p_1' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 132 [1/1] (1.14ns)   --->   "%icmp_ln630 = icmp_ult  i64 %p_1, i64 %divisor" [./intx/int128.hpp:630]   --->   Operation 132 'icmp' 'icmp_ln630' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 133 [1/1] (1.14ns)   --->   "%icmp_ln633 = icmp_ult  i64 %p_1, i64 %divisor_2" [./intx/int128.hpp:633]   --->   Operation 133 'icmp' 'icmp_ln633' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 134 [1/1] (0.14ns)   --->   "%xor_ln633 = xor i1 %icmp_ln633, i1 1" [./intx/int128.hpp:633]   --->   Operation 134 'xor' 'xor_ln633' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node v_2)   --->   "%select_ln633_1 = select i1 %xor_ln633, i64 18446744073709551614, i64 18446744073709551615" [./intx/int128.hpp:633]   --->   Operation 135 'select' 'select_ln633_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 136 [1/1] (1.36ns) (out node of the LUT)   --->   "%v_2 = add i64 %select_ln633_1, i64 %v4" [./intx/int128.hpp:633]   --->   Operation 136 'add' 'v_2' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 137 [1/1] (0.43ns)   --->   "%v_6 = select i1 %icmp_ln630, i64 %v_2, i64 %v4" [./intx/int128.hpp:630]   --->   Operation 137 'select' 'v_6' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.83>
ST_14 : Operation 138 [1/1] (1.36ns)   --->   "%p_2 = sub i64 %p_1, i64 %divisor_2" [./intx/int128.hpp:636]   --->   Operation 138 'sub' 'p_2' <Predicate = (xor_ln633 & icmp_ln630)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node p_4)   --->   "%p_3 = select i1 %xor_ln633, i64 %p_2, i64 %p_1" [./intx/int128.hpp:633]   --->   Operation 139 'select' 'p_3' <Predicate = (icmp_ln630)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 140 [1/1] (1.36ns) (out node of the LUT)   --->   "%p_4 = sub i64 %p_3, i64 %divisor_2" [./intx/int128.hpp:638]   --->   Operation 140 'sub' 'p_4' <Predicate = (icmp_ln630)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node p_6)   --->   "%p_5 = select i1 %icmp_ln630, i64 %p_4, i64 %p_1" [./intx/int128.hpp:630]   --->   Operation 141 'select' 'p_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln397 = zext i64 %v_6" [./intx/int128.hpp:397]   --->   Operation 142 'zext' 'zext_ln397' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln397_5 = zext i64 %divisor" [./intx/int128.hpp:397]   --->   Operation 143 'zext' 'zext_ln397_5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 144 [1/1] (5.47ns)   --->   "%x_5 = mul i128 %zext_ln397, i128 %zext_ln397_5" [./intx/int128.hpp:397]   --->   Operation 144 'mul' 'x_5' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 145 [1/1] (0.00ns)   --->   "%t_words_s = trunc i128 %x_5" [./intx/int128.hpp:107]   --->   Operation 145 'trunc' 't_words_s' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 146 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i64 @_ssdm_op_PartSelect.i64.i128.i32.i32, i128 %x_5, i32 64, i32 127" [./intx/int128.hpp:107]   --->   Operation 146 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 147 [1/1] (1.36ns) (out node of the LUT)   --->   "%p_6 = add i64 %trunc_ln5, i64 %p_5" [./intx/int128.hpp:643]   --->   Operation 147 'add' 'p_6' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 148 [1/1] (1.14ns)   --->   "%icmp_ln649_1 = icmp_ult  i64 %t_words_s, i64 %divisor" [./intx/int128.hpp:649]   --->   Operation 148 'icmp' 'icmp_ln649_1' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 2.23>
ST_15 : Operation 149 [1/1] (1.14ns)   --->   "%icmp_ln644 = icmp_ult  i64 %p_6, i64 %trunc_ln5" [./intx/int128.hpp:644]   --->   Operation 149 'icmp' 'icmp_ln644' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 150 [1/1] (1.36ns)   --->   "%v = add i64 %v_6, i64 18446744073709551615" [./intx/int128.hpp:646]   --->   Operation 150 'add' 'v' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 151 [1/1] (1.14ns)   --->   "%icmp_ln647 = icmp_ult  i64 %p_6, i64 %divisor_2" [./intx/int128.hpp:647]   --->   Operation 151 'icmp' 'icmp_ln647' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 152 [1/1] (1.14ns)   --->   "%icmp_ln649 = icmp_ugt  i64 %p_6, i64 %divisor_2" [./intx/int128.hpp:649]   --->   Operation 152 'icmp' 'icmp_ln649' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node select_ln644)   --->   "%xor_ln649 = xor i1 %icmp_ln649_1, i1 1" [./intx/int128.hpp:649]   --->   Operation 153 'xor' 'xor_ln649' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node select_ln644)   --->   "%or_ln649 = or i1 %icmp_ln649, i1 %xor_ln649" [./intx/int128.hpp:649]   --->   Operation 154 'or' 'or_ln649' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 155 [1/1] (1.36ns)   --->   "%add_ln650 = add i64 %v_6, i64 18446744073709551614" [./intx/int128.hpp:650]   --->   Operation 155 'add' 'add_ln650' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node select_ln644)   --->   "%select_ln649 = select i1 %or_ln649, i64 %add_ln650, i64 %v" [./intx/int128.hpp:649]   --->   Operation 156 'select' 'select_ln649' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 157 [1/1] (0.43ns) (out node of the LUT)   --->   "%select_ln644 = select i1 %icmp_ln644, i64 %select_ln649, i64 %v_6" [./intx/int128.hpp:644]   --->   Operation 157 'select' 'select_ln644' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node v_5)   --->   "%and_ln647 = and i1 %icmp_ln644, i1 %icmp_ln647" [./intx/int128.hpp:647]   --->   Operation 158 'and' 'and_ln647' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 159 [1/1] (0.43ns) (out node of the LUT)   --->   "%v_5 = select i1 %and_ln647, i64 %v, i64 %select_ln644" [./intx/int128.hpp:647]   --->   Operation 159 'select' 'v_5' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln397_6 = zext i64 %v_5" [./intx/int128.hpp:397]   --->   Operation 160 'zext' 'zext_ln397_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 161 [1/1] (0.46ns)   --->   "%br_ln618 = br void" [./intx/intx.hpp:618]   --->   Operation 161 'br' 'br_ln618' <Predicate = true> <Delay = 0.46>

State 16 <SV = 15> <Delay = 1.44>
ST_16 : Operation 162 [1/1] (0.00ns)   --->   "%j = phi i5 %sub_ln618, void %reciprocal_2by1.exit_ifconv, i5 %add_ln618_1, void %_ZN4intx4uintILj128EEC2Ev.exit._crit_edge" [./intx/intx.hpp:618]   --->   Operation 162 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %j, i32 4" [./intx/intx.hpp:618]   --->   Operation 163 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 164 [1/1] (0.00ns)   --->   "%br_ln618 = br i1 %tmp_3, void %.split2, void %._crit_edge.loopexit" [./intx/intx.hpp:618]   --->   Operation 164 'br' 'br_ln618' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 165 [1/1] (0.00ns)   --->   "%trunc_ln618 = trunc i5 %j" [./intx/intx.hpp:618]   --->   Operation 165 'trunc' 'trunc_ln618' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_16 : Operation 166 [1/1] (0.71ns)   --->   "%add_ln620 = add i3 %trunc_ln618, i3 %empty" [./intx/intx.hpp:620]   --->   Operation 166 'add' 'add_ln620' <Predicate = (!tmp_3)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 167 [1/1] (0.00ns)   --->   "%zext_ln620 = zext i3 %add_ln620" [./intx/intx.hpp:620]   --->   Operation 167 'zext' 'zext_ln620' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_16 : Operation 168 [1/1] (0.00ns)   --->   "%u_addr = getelementptr i64 %u, i64 0, i64 %zext_ln620" [./intx/intx.hpp:620]   --->   Operation 168 'getelementptr' 'u_addr' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_16 : Operation 169 [2/2] (0.73ns)   --->   "%u2 = load i3 %u_addr" [./intx/intx.hpp:620]   --->   Operation 169 'load' 'u2' <Predicate = (!tmp_3)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_16 : Operation 170 [1/1] (0.00ns)   --->   "%ret_ln650 = ret" [./intx/intx.hpp:650]   --->   Operation 170 'ret' 'ret_ln650' <Predicate = (tmp_3)> <Delay = 0.00>

State 17 <SV = 16> <Delay = 1.44>
ST_17 : Operation 171 [1/2] (0.73ns)   --->   "%u2 = load i3 %u_addr" [./intx/intx.hpp:620]   --->   Operation 171 'load' 'u2' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_17 : Operation 172 [1/1] (0.71ns)   --->   "%add_ln621 = add i3 %add_ln620, i3 7" [./intx/intx.hpp:621]   --->   Operation 172 'add' 'add_ln621' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln621 = zext i3 %add_ln621" [./intx/intx.hpp:621]   --->   Operation 173 'zext' 'zext_ln621' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 174 [1/1] (0.00ns)   --->   "%u_addr_1 = getelementptr i64 %u, i64 0, i64 %zext_ln621" [./intx/intx.hpp:621]   --->   Operation 174 'getelementptr' 'u_addr_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 175 [2/2] (0.73ns)   --->   "%u1 = load i3 %u_addr_1" [./intx/intx.hpp:621]   --->   Operation 175 'load' 'u1' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_17 : Operation 176 [1/1] (0.71ns)   --->   "%add_ln622 = add i3 %add_ln620, i3 6" [./intx/intx.hpp:622]   --->   Operation 176 'add' 'add_ln622' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 177 [1/1] (0.00ns)   --->   "%zext_ln622 = zext i3 %add_ln622" [./intx/intx.hpp:622]   --->   Operation 177 'zext' 'zext_ln622' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 178 [1/1] (0.00ns)   --->   "%u_addr_2 = getelementptr i64 %u, i64 0, i64 %zext_ln622" [./intx/intx.hpp:622]   --->   Operation 178 'getelementptr' 'u_addr_2' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 179 [2/2] (0.73ns)   --->   "%u0 = load i3 %u_addr_2" [./intx/intx.hpp:622]   --->   Operation 179 'load' 'u0' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>

State 18 <SV = 17> <Delay = 5.47>
ST_18 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln618_1 = zext i5 %j" [./intx/intx.hpp:618]   --->   Operation 180 'zext' 'zext_ln618_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 181 [1/1] (0.00ns)   --->   "%specloopname_ln618 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [./intx/intx.hpp:618]   --->   Operation 181 'specloopname' 'specloopname_ln618' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 182 [1/2] (0.73ns)   --->   "%u1 = load i3 %u_addr_1" [./intx/intx.hpp:621]   --->   Operation 182 'load' 'u1' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_18 : Operation 183 [1/2] (0.73ns)   --->   "%u0 = load i3 %u_addr_2" [./intx/intx.hpp:622]   --->   Operation 183 'load' 'u0' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_18 : Operation 184 [1/1] (1.14ns)   --->   "%icmp_ln288 = icmp_eq  i64 %u1, i64 %divisor" [./intx/int128.hpp:288]   --->   Operation 184 'icmp' 'icmp_ln288' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 185 [1/1] (1.14ns)   --->   "%icmp_ln288_1 = icmp_eq  i64 %u2, i64 %divisor_2" [./intx/int128.hpp:288]   --->   Operation 185 'icmp' 'icmp_ln288_1' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 186 [1/1] (0.14ns)   --->   "%and_ln288 = and i1 %icmp_ln288, i1 %icmp_ln288_1" [./intx/int128.hpp:288]   --->   Operation 186 'and' 'and_ln288' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 187 [1/1] (0.00ns)   --->   "%br_ln625 = br i1 %and_ln288, void %_ZN4intx4uintILj128EEC2Ev.exit_ifconv, void" [./intx/intx.hpp:625]   --->   Operation 187 'br' 'br_ln625' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 188 [1/1] (0.00ns)   --->   "%zext_ln397_7 = zext i64 %u2" [./intx/int128.hpp:397]   --->   Operation 188 'zext' 'zext_ln397_7' <Predicate = (!and_ln288)> <Delay = 0.00>
ST_18 : Operation 189 [1/1] (5.47ns)   --->   "%mul_ln397 = mul i128 %zext_ln397_6, i128 %zext_ln397_7" [./intx/int128.hpp:397]   --->   Operation 189 'mul' 'mul_ln397' <Predicate = (!and_ln288)> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 190 [1/1] (0.00ns)   --->   "%q_1 = trunc i128 %mul_ln397" [./intx/int128.hpp:107]   --->   Operation 190 'trunc' 'q_1' <Predicate = (!and_ln288)> <Delay = 0.00>
ST_18 : Operation 191 [1/1] (0.00ns)   --->   "%q_2 = partselect i64 @_ssdm_op_PartSelect.i64.i128.i32.i32, i128 %mul_ln397, i32 64, i32 127" [./intx/int128.hpp:107]   --->   Operation 191 'partselect' 'q_2' <Predicate = (!and_ln288)> <Delay = 0.00>

State 19 <SV = 18> <Delay = 3.56>
ST_19 : Operation 192 [1/1] (1.36ns)   --->   "%q_3 = add i64 %u1, i64 %q_1" [./intx/int128.hpp:175]   --->   Operation 192 'add' 'q_3' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 193 [1/1] (1.14ns)   --->   "%icmp_ln176 = icmp_ult  i64 %q_3, i64 %q_1" [./intx/int128.hpp:176]   --->   Operation 193 'icmp' 'icmp_ln176' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln177_1 = zext i1 %icmp_ln176" [./intx/int128.hpp:177]   --->   Operation 194 'zext' 'zext_ln177_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 195 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln177_1 = add i64 %q_2, i64 %zext_ln177_1" [./intx/int128.hpp:177]   --->   Operation 195 'add' 'add_ln177_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 196 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%q_4 = add i64 %add_ln177_1, i64 %u2" [./intx/int128.hpp:177]   --->   Operation 196 'add' 'q_4' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 20 <SV = 19> <Delay = 6.83>
ST_20 : Operation 197 [1/1] (5.47ns)   --->   "%mul_ln686 = mul i64 %divisor_2, i64 %q_4" [./intx/int128.hpp:686->./intx/intx.hpp:634]   --->   Operation 197 'mul' 'mul_ln686' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 198 [1/1] (1.36ns)   --->   "%r1 = sub i64 %u1, i64 %mul_ln686" [./intx/int128.hpp:686->./intx/intx.hpp:634]   --->   Operation 198 'sub' 'r1' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln397_8 = zext i64 %q_4" [./intx/int128.hpp:397]   --->   Operation 199 'zext' 'zext_ln397_8' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 200 [1/1] (5.47ns)   --->   "%mul_ln397_1 = mul i128 %zext_ln397_5, i128 %zext_ln397_8" [./intx/int128.hpp:397]   --->   Operation 200 'mul' 'mul_ln397_1' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 201 [1/1] (0.00ns)   --->   "%t_1 = trunc i128 %mul_ln397_1" [./intx/int128.hpp:107]   --->   Operation 201 'trunc' 't_1' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 202 [1/1] (0.00ns)   --->   "%t_2 = partselect i64 @_ssdm_op_PartSelect.i64.i128.i32.i32, i128 %mul_ln397_1, i32 64, i32 127" [./intx/int128.hpp:107]   --->   Operation 202 'partselect' 't_2' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 203 [1/1] (1.36ns)   --->   "%r_2 = sub i64 %u0, i64 %t_1" [./intx/int128.hpp:213]   --->   Operation 203 'sub' 'r_2' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 204 [1/1] (1.14ns)   --->   "%icmp_ln214 = icmp_ugt  i64 %t_1, i64 %u0" [./intx/int128.hpp:214]   --->   Operation 204 'icmp' 'icmp_ln214' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 6.41>
ST_21 : Operation 205 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln213_1 = sub i64 %r1, i64 %t_2" [./intx/int128.hpp:213]   --->   Operation 205 'sub' 'sub_ln213_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 206 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i1 %icmp_ln214" [./intx/int128.hpp:215]   --->   Operation 206 'zext' 'zext_ln215' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 207 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%sub_ln216 = sub i64 %sub_ln213_1, i64 %zext_ln215" [./intx/int128.hpp:216]   --->   Operation 207 'sub' 'sub_ln216' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 208 [1/1] (1.36ns)   --->   "%r = sub i64 %r_2, i64 %divisor" [./intx/int128.hpp:213]   --->   Operation 208 'sub' 'r' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 209 [1/1] (1.14ns)   --->   "%icmp_ln214_1 = icmp_ult  i64 %r_2, i64 %divisor" [./intx/int128.hpp:214]   --->   Operation 209 'icmp' 'icmp_ln214_1' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 210 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln213_3 = sub i64 %sub_ln216, i64 %divisor_2" [./intx/int128.hpp:213]   --->   Operation 210 'sub' 'sub_ln213_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln215_1 = zext i1 %icmp_ln214_1" [./intx/int128.hpp:215]   --->   Operation 211 'zext' 'zext_ln215_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 212 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%r_10 = sub i64 %sub_ln213_3, i64 %zext_ln215_1" [./intx/int128.hpp:216]   --->   Operation 212 'sub' 'r_10' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 213 [1/1] (1.36ns)   --->   "%q_5 = add i64 %q_4, i64 1" [./intx/int128.hpp:693->./intx/intx.hpp:634]   --->   Operation 213 'add' 'q_5' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 214 [1/1] (1.14ns)   --->   "%icmp_ln695 = icmp_ult  i64 %r_10, i64 %q_3" [./intx/int128.hpp:695->./intx/intx.hpp:634]   --->   Operation 214 'icmp' 'icmp_ln695' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 215 [1/1] (1.14ns)   --->   "%icmp_ln176_2 = icmp_ult  i64 %r_2, i64 %r" [./intx/int128.hpp:176]   --->   Operation 215 'icmp' 'icmp_ln176_2' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln177_2 = zext i1 %icmp_ln176_2" [./intx/int128.hpp:177]   --->   Operation 216 'zext' 'zext_ln177_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 217 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln177_3 = add i64 %r_10, i64 %zext_ln177_2" [./intx/int128.hpp:177]   --->   Operation 217 'add' 'add_ln177_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 218 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%r_3 = add i64 %add_ln177_3, i64 %divisor_2" [./intx/int128.hpp:177]   --->   Operation 218 'add' 'r_3' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 219 [1/1] (0.43ns)   --->   "%r_4 = select i1 %icmp_ln695, i64 %r, i64 %r_2" [./intx/int128.hpp:695->./intx/intx.hpp:634]   --->   Operation 219 'select' 'r_4' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 220 [1/1] (0.43ns)   --->   "%r_5 = select i1 %icmp_ln695, i64 %r_10, i64 %r_3" [./intx/int128.hpp:695->./intx/intx.hpp:634]   --->   Operation 220 'select' 'r_5' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 221 [1/1] (0.43ns)   --->   "%q_6 = select i1 %icmp_ln695, i64 %q_5, i64 %q_4" [./intx/int128.hpp:695->./intx/intx.hpp:634]   --->   Operation 221 'select' 'q_6' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 222 [1/1] (1.14ns)   --->   "%icmp_ln302 = icmp_ult  i64 %r_5, i64 %divisor_2" [./intx/int128.hpp:302]   --->   Operation 222 'icmp' 'icmp_ln302' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 223 [1/1] (1.14ns)   --->   "%icmp_ln302_1 = icmp_eq  i64 %r_5, i64 %divisor_2" [./intx/int128.hpp:302]   --->   Operation 223 'icmp' 'icmp_ln302_1' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 224 [1/1] (1.14ns)   --->   "%icmp_ln302_2 = icmp_ult  i64 %r_4, i64 %divisor" [./intx/int128.hpp:302]   --->   Operation 224 'icmp' 'icmp_ln302_2' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node or_ln302)   --->   "%and_ln302 = and i1 %icmp_ln302_1, i1 %icmp_ln302_2" [./intx/int128.hpp:302]   --->   Operation 225 'and' 'and_ln302' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 226 [1/1] (0.14ns) (out node of the LUT)   --->   "%or_ln302 = or i1 %icmp_ln302, i1 %and_ln302" [./intx/int128.hpp:302]   --->   Operation 226 'or' 'or_ln302' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 227 [1/1] (1.36ns)   --->   "%r_6 = sub i64 %r_4, i64 %divisor" [./intx/int128.hpp:213]   --->   Operation 227 'sub' 'r_6' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 228 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln213_4 = sub i64 %r_5, i64 %divisor_2" [./intx/int128.hpp:213]   --->   Operation 228 'sub' 'sub_ln213_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 229 [1/1] (0.00ns)   --->   "%zext_ln215_2 = zext i1 %icmp_ln302_2" [./intx/int128.hpp:215]   --->   Operation 229 'zext' 'zext_ln215_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 230 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%r_7 = sub i64 %sub_ln213_4, i64 %zext_ln215_2" [./intx/int128.hpp:216]   --->   Operation 230 'sub' 'r_7' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 231 [1/1] (1.36ns)   --->   "%add_ln703 = add i64 %q_6, i64 1" [./intx/int128.hpp:703->./intx/intx.hpp:634]   --->   Operation 231 'add' 'add_ln703' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 232 [1/1] (0.43ns)   --->   "%r_11 = select i1 %or_ln302, i64 %r_4, i64 %r_6" [./intx/int128.hpp:302]   --->   Operation 232 'select' 'r_11' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 233 [1/1] (0.43ns)   --->   "%r_12 = select i1 %or_ln302, i64 %r_5, i64 %r_7" [./intx/int128.hpp:302]   --->   Operation 233 'select' 'r_12' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 234 [1/1] (0.43ns)   --->   "%select_ln302 = select i1 %or_ln302, i64 %q_6, i64 %add_ln703" [./intx/int128.hpp:302]   --->   Operation 234 'select' 'select_ln302' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 235 [2/2] (0.46ns)   --->   "%overflow = call i64 @submul, i64 %u, i3 %trunc_ln618, i64 %d, i4 %add_ln616, i64 %select_ln302" [./intx/intx.hpp:637]   --->   Operation 235 'call' 'overflow' <Predicate = true> <Delay = 0.46> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 21> <Delay = 1.36>
ST_22 : Operation 236 [1/2] (0.00ns)   --->   "%overflow = call i64 @submul, i64 %u, i3 %trunc_ln618, i64 %d, i4 %add_ln616, i64 %select_ln302" [./intx/intx.hpp:637]   --->   Operation 236 'call' 'overflow' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 237 [1/1] (1.36ns)   --->   "%d_3 = sub i64 %r_11, i64 %overflow" [./intx/int128.hpp:196]   --->   Operation 237 'sub' 'd_3' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 238 [1/1] (1.14ns)   --->   "%carry1_3 = icmp_ult  i64 %r_11, i64 %overflow" [./intx/int128.hpp:197]   --->   Operation 238 'icmp' 'carry1_3' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 2.09>
ST_23 : Operation 239 [1/1] (0.73ns)   --->   "%store_ln299 = store i64 %d_3, i3 %u_addr_2" [D:/Xillin/Vitis_HLS/2020.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\tuple:299]   --->   Operation 239 'store' 'store_ln299' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_23 : Operation 240 [1/1] (0.00ns)   --->   "%zext_ln639 = zext i1 %carry1_3" [./intx/intx.hpp:639]   --->   Operation 240 'zext' 'zext_ln639' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 241 [1/1] (1.36ns)   --->   "%d_4 = sub i64 %r_12, i64 %zext_ln639" [./intx/int128.hpp:196]   --->   Operation 241 'sub' 'd_4' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 242 [1/1] (1.14ns)   --->   "%carry1 = icmp_ult  i64 %r_12, i64 %zext_ln639" [./intx/int128.hpp:197]   --->   Operation 242 'icmp' 'carry1' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 243 [1/1] (0.73ns)   --->   "%store_ln299 = store i64 %d_4, i3 %u_addr_1" [D:/Xillin/Vitis_HLS/2020.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\tuple:299]   --->   Operation 243 'store' 'store_ln299' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_23 : Operation 244 [1/1] (0.50ns)   --->   "%br_ln641 = br i1 %carry1, void %_ZN4intx4uintILj128EEC2Ev.exit._crit_edge, void %.lr.ph.i.preheader" [./intx/intx.hpp:641]   --->   Operation 244 'br' 'br_ln641' <Predicate = true> <Delay = 0.50>
ST_23 : Operation 245 [1/1] (1.36ns)   --->   "%add_ln643 = add i64 %select_ln302, i64 18446744073709551615" [./intx/intx.hpp:643]   --->   Operation 245 'add' 'add_ln643' <Predicate = (carry1)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 246 [1/1] (0.46ns)   --->   "%store_ln0 = store i64 0, i64 %reuse_reg"   --->   Operation 246 'store' 'store_ln0' <Predicate = (carry1)> <Delay = 0.46>
ST_23 : Operation 247 [1/1] (0.46ns)   --->   "%store_ln0 = store i64 18446744073709551615, i64 %reuse_addr_reg"   --->   Operation 247 'store' 'store_ln0' <Predicate = (carry1)> <Delay = 0.46>
ST_23 : Operation 248 [1/1] (0.46ns)   --->   "%br_ln586 = br void %.lr.ph.i" [./intx/intx.hpp:586]   --->   Operation 248 'br' 'br_ln586' <Predicate = (carry1)> <Delay = 0.46>

State 24 <SV = 23> <Delay = 1.85>
ST_24 : Operation 249 [1/1] (0.00ns)   --->   "%i = phi i3 %add_ln586, void %.split, i3 0, void %.lr.ph.i.preheader" [./intx/intx.hpp:586]   --->   Operation 249 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 250 [1/1] (0.00ns)   --->   "%carry = phi i1 %or_ln164, void %.split, i1 0, void %.lr.ph.i.preheader" [./intx/int128.hpp:164]   --->   Operation 250 'phi' 'carry' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 251 [1/1] (0.71ns)   --->   "%add_ln586 = add i3 %i, i3 1" [./intx/intx.hpp:586]   --->   Operation 251 'add' 'add_ln586' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 252 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 252 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 253 [1/1] (0.56ns)   --->   "%icmp_ln586 = icmp_eq  i3 %i, i3 %add_ln616_1" [./intx/intx.hpp:586]   --->   Operation 253 'icmp' 'icmp_ln586' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 254 [1/1] (0.00ns)   --->   "%empty_67 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 2, i64 7, i64 0"   --->   Operation 254 'speclooptripcount' 'empty_67' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 255 [1/1] (0.00ns)   --->   "%br_ln586 = br i1 %icmp_ln586, void %.split, void %_ZN4intx8internal3addEPyPKyS3_i.exit.loopexit" [./intx/intx.hpp:586]   --->   Operation 255 'br' 'br_ln586' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 256 [1/1] (0.00ns)   --->   "%i_cast = zext i3 %i" [./intx/intx.hpp:586]   --->   Operation 256 'zext' 'i_cast' <Predicate = (!icmp_ln586)> <Delay = 0.00>
ST_24 : Operation 257 [1/1] (0.71ns)   --->   "%add_ln587 = add i3 %i, i3 %trunc_ln618" [./intx/intx.hpp:587]   --->   Operation 257 'add' 'add_ln587' <Predicate = (!icmp_ln586)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 258 [1/1] (0.00ns)   --->   "%zext_ln587 = zext i3 %add_ln587" [./intx/intx.hpp:587]   --->   Operation 258 'zext' 'zext_ln587' <Predicate = (!icmp_ln586)> <Delay = 0.00>
ST_24 : Operation 259 [1/1] (0.00ns)   --->   "%u_addr_3 = getelementptr i64 %u, i64 0, i64 %zext_ln587" [./intx/intx.hpp:587]   --->   Operation 259 'getelementptr' 'u_addr_3' <Predicate = (!icmp_ln586)> <Delay = 0.00>
ST_24 : Operation 260 [1/1] (0.00ns)   --->   "%reuse_addr_reg_load = load i64 %reuse_addr_reg"   --->   Operation 260 'load' 'reuse_addr_reg_load' <Predicate = (!icmp_ln586)> <Delay = 0.00>
ST_24 : Operation 261 [2/2] (0.73ns)   --->   "%u_load_4 = load i3 %u_addr_3" [./intx/intx.hpp:587]   --->   Operation 261 'load' 'u_load_4' <Predicate = (!icmp_ln586)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_24 : Operation 262 [1/1] (1.14ns)   --->   "%addr_cmp = icmp_eq  i64 %reuse_addr_reg_load, i64 %zext_ln587" [./intx/intx.hpp:587]   --->   Operation 262 'icmp' 'addr_cmp' <Predicate = (!icmp_ln586)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 263 [1/1] (0.00ns)   --->   "%d_addr_2 = getelementptr i64 %d, i64 0, i64 %i_cast" [./intx/intx.hpp:587]   --->   Operation 263 'getelementptr' 'd_addr_2' <Predicate = (!icmp_ln586)> <Delay = 0.00>
ST_24 : Operation 264 [2/2] (0.73ns)   --->   "%y_5 = load i3 %d_addr_2" [./intx/intx.hpp:587]   --->   Operation 264 'load' 'y_5' <Predicate = (!icmp_ln586)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_24 : Operation 265 [1/1] (0.46ns)   --->   "%store_ln587 = store i64 %zext_ln587, i64 %reuse_addr_reg" [./intx/intx.hpp:587]   --->   Operation 265 'store' 'store_ln587' <Predicate = (!icmp_ln586)> <Delay = 0.46>

State 25 <SV = 24> <Delay = 5.18>
ST_25 : Operation 266 [1/1] (0.00ns)   --->   "%specloopname_ln586 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [./intx/intx.hpp:586]   --->   Operation 266 'specloopname' 'specloopname_ln586' <Predicate = (!icmp_ln586)> <Delay = 0.00>
ST_25 : Operation 267 [1/1] (0.00ns)   --->   "%reuse_reg_load = load i64 %reuse_reg"   --->   Operation 267 'load' 'reuse_reg_load' <Predicate = (!icmp_ln586 & addr_cmp)> <Delay = 0.00>
ST_25 : Operation 268 [1/2] (0.73ns)   --->   "%u_load_4 = load i3 %u_addr_3" [./intx/intx.hpp:587]   --->   Operation 268 'load' 'u_load_4' <Predicate = (!icmp_ln586)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_25 : Operation 269 [1/1] (0.43ns)   --->   "%x_8 = select i1 %addr_cmp, i64 %reuse_reg_load, i64 %u_load_4" [./intx/intx.hpp:587]   --->   Operation 269 'select' 'x_8' <Predicate = (!icmp_ln586)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 270 [1/2] (0.73ns)   --->   "%y_5 = load i3 %d_addr_2" [./intx/intx.hpp:587]   --->   Operation 270 'load' 'y_5' <Predicate = (!icmp_ln586)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_25 : Operation 271 [1/1] (1.36ns)   --->   "%s = add i64 %y_5, i64 %x_8" [./intx/int128.hpp:160]   --->   Operation 271 'add' 's' <Predicate = (!icmp_ln586)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 272 [1/1] (1.14ns)   --->   "%carry1_2 = icmp_ult  i64 %s, i64 %x_8" [./intx/int128.hpp:161]   --->   Operation 272 'icmp' 'carry1_2' <Predicate = (!icmp_ln586)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 273 [1/1] (0.00ns)   --->   "%zext_ln162 = zext i1 %carry" [./intx/int128.hpp:162]   --->   Operation 273 'zext' 'zext_ln162' <Predicate = (!icmp_ln586)> <Delay = 0.00>
ST_25 : Operation 274 [1/1] (1.36ns)   --->   "%t = add i64 %s, i64 %zext_ln162" [./intx/int128.hpp:162]   --->   Operation 274 'add' 't' <Predicate = (!icmp_ln586)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 275 [1/1] (1.14ns)   --->   "%carry2 = icmp_ult  i64 %t, i64 %s" [./intx/int128.hpp:163]   --->   Operation 275 'icmp' 'carry2' <Predicate = (!icmp_ln586)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 276 [1/1] (0.14ns)   --->   "%or_ln164 = or i1 %carry1_2, i1 %carry2" [./intx/int128.hpp:164]   --->   Operation 276 'or' 'or_ln164' <Predicate = (!icmp_ln586)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 277 [1/1] (0.73ns)   --->   "%store_ln299 = store i64 %t, i3 %u_addr_3" [D:/Xillin/Vitis_HLS/2020.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\tuple:299]   --->   Operation 277 'store' 'store_ln299' <Predicate = (!icmp_ln586)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_25 : Operation 278 [1/1] (0.46ns)   --->   "%store_ln162 = store i64 %t, i64 %reuse_reg" [./intx/int128.hpp:162]   --->   Operation 278 'store' 'store_ln162' <Predicate = (!icmp_ln586)> <Delay = 0.46>
ST_25 : Operation 279 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph.i"   --->   Operation 279 'br' 'br_ln0' <Predicate = (!icmp_ln586)> <Delay = 0.00>

State 26 <SV = 24> <Delay = 0.73>
ST_26 : Operation 280 [2/2] (0.73ns)   --->   "%u_load = load i3 %u_addr_1" [./intx/intx.hpp:644]   --->   Operation 280 'load' 'u_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>

State 27 <SV = 25> <Delay = 2.51>
ST_27 : Operation 281 [1/1] (0.00ns)   --->   "%zext_ln644 = zext i1 %carry" [./intx/intx.hpp:644]   --->   Operation 281 'zext' 'zext_ln644' <Predicate = (!and_ln288 & carry1)> <Delay = 0.00>
ST_27 : Operation 282 [1/2] (0.73ns)   --->   "%u_load = load i3 %u_addr_1" [./intx/intx.hpp:644]   --->   Operation 282 'load' 'u_load' <Predicate = (!and_ln288 & carry1)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_27 : Operation 283 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln644 = add i64 %divisor_2, i64 %zext_ln644" [./intx/intx.hpp:644]   --->   Operation 283 'add' 'add_ln644' <Predicate = (!and_ln288 & carry1)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 284 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%add_ln644_1 = add i64 %add_ln644, i64 %u_load" [./intx/intx.hpp:644]   --->   Operation 284 'add' 'add_ln644_1' <Predicate = (!and_ln288 & carry1)> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 285 [1/1] (0.73ns)   --->   "%store_ln644 = store i64 %add_ln644_1, i3 %u_addr_1" [./intx/intx.hpp:644]   --->   Operation 285 'store' 'store_ln644' <Predicate = (!and_ln288 & carry1)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_27 : Operation 286 [1/1] (0.50ns)   --->   "%br_ln645 = br void %_ZN4intx4uintILj128EEC2Ev.exit._crit_edge" [./intx/intx.hpp:645]   --->   Operation 286 'br' 'br_ln645' <Predicate = (!and_ln288 & carry1)> <Delay = 0.50>
ST_27 : Operation 287 [1/1] (0.00ns)   --->   "%empty_68 = phi i64 18446744073709551615, void, i64 %add_ln643, void %_ZN4intx8internal3addEPyPKyS3_i.exit.loopexit, i64 %select_ln302, void %_ZN4intx4uintILj128EEC2Ev.exit_ifconv" [./intx/intx.hpp:643]   --->   Operation 287 'phi' 'empty_68' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 288 [1/1] (0.00ns)   --->   "%q_addr = getelementptr i64 %q, i64 0, i64 %zext_ln618_1" [./intx/intx.hpp:648]   --->   Operation 288 'getelementptr' 'q_addr' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 289 [1/1] (0.73ns)   --->   "%store_ln648 = store i64 %empty_68, i3 %q_addr" [./intx/intx.hpp:648]   --->   Operation 289 'store' 'store_ln648' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_27 : Operation 290 [1/1] (0.82ns)   --->   "%add_ln618_1 = add i5 %j, i5 31" [./intx/intx.hpp:618]   --->   Operation 290 'add' 'add_ln618_1' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 291 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 291 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 28 <SV = 18> <Delay = 0.46>
ST_28 : Operation 292 [2/2] (0.46ns)   --->   "%tmp = call i64 @submul, i64 %u, i3 %trunc_ln618, i64 %d, i4 %dlen_read, i64 18446744073709551615" [./intx/intx.hpp:629]   --->   Operation 292 'call' 'tmp' <Predicate = true> <Delay = 0.46> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 19> <Delay = 0.00>
ST_29 : Operation 293 [1/2] (0.00ns)   --->   "%tmp = call i64 @submul, i64 %u, i3 %trunc_ln618, i64 %d, i4 %dlen_read, i64 18446744073709551615" [./intx/intx.hpp:629]   --->   Operation 293 'call' 'tmp' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 20> <Delay = 2.09>
ST_30 : Operation 294 [1/1] (1.36ns)   --->   "%sub_ln629 = sub i64 %divisor_2, i64 %tmp" [./intx/intx.hpp:629]   --->   Operation 294 'sub' 'sub_ln629' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 295 [1/1] (0.73ns)   --->   "%store_ln629 = store i64 %sub_ln629, i3 %u_addr" [./intx/intx.hpp:629]   --->   Operation 295 'store' 'store_ln629' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_30 : Operation 296 [1/1] (0.50ns)   --->   "%br_ln630 = br void %_ZN4intx4uintILj128EEC2Ev.exit._crit_edge" [./intx/intx.hpp:630]   --->   Operation 296 'br' 'br_ln630' <Predicate = true> <Delay = 0.50>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.45ns
The critical path consists of the following:
	wire read on port 'dlen' [10]  (0 ns)
	'add' operation ('len', ./intx/intx.hpp:616) [19]  (0.715 ns)
	'getelementptr' operation ('d_addr_1', ./intx/intx.hpp:616) [21]  (0 ns)
	'load' operation ('divisor', ./intx/intx.hpp:616) on array 'd' [22]  (0.73 ns)

 <State 2>: 2.03ns
The critical path consists of the following:
	'load' operation ('divisor', ./intx/intx.hpp:616) on array 'd' [22]  (0.73 ns)
	'getelementptr' operation ('intx_internal_reciprocal_table_addr', ./intx/int128.hpp:609->./intx/int128.hpp:627) [26]  (0 ns)
	'load' operation ('v0', ./intx/int128.hpp:609->./intx/int128.hpp:627) on array 'intx_internal_reciprocal_table' [27]  (1.3 ns)

 <State 3>: 1.99ns
The critical path consists of the following:
	'load' operation ('v0', ./intx/int128.hpp:609->./intx/int128.hpp:627) on array 'intx_internal_reciprocal_table' [27]  (1.3 ns)
	'mul' operation of DSP[35] ('mul_ln612', ./intx/int128.hpp:612->./intx/int128.hpp:627) [35]  (0.698 ns)

 <State 4>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[35] ('mul_ln612', ./intx/int128.hpp:612->./intx/int128.hpp:627) [35]  (0.698 ns)

 <State 5>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[35] ('mul_ln612', ./intx/int128.hpp:612->./intx/int128.hpp:627) [35]  (0.698 ns)

 <State 6>: 6.31ns
The critical path consists of the following:
	'add' operation ('d40', ./intx/int128.hpp:611->./intx/int128.hpp:627) [31]  (1.18 ns)
	'mul' operation ('mul_ln612_1', ./intx/int128.hpp:612->./intx/int128.hpp:627) [37]  (4 ns)
	'sub' operation ('v1', ./intx/int128.hpp:612->./intx/int128.hpp:627) [42]  (1.13 ns)

 <State 7>: 4ns
The critical path consists of the following:
	'mul' operation ('mul_ln614', ./intx/int128.hpp:614->./intx/int128.hpp:627) [48]  (4 ns)

 <State 8>: 6.83ns
The critical path consists of the following:
	'sub' operation ('sub_ln614', ./intx/int128.hpp:614->./intx/int128.hpp:627) [49]  (1.36 ns)
	'mul' operation ('mul_ln614_1', ./intx/int128.hpp:614->./intx/int128.hpp:627) [50]  (5.47 ns)

 <State 9>: 6.83ns
The critical path consists of the following:
	'add' operation ('d63', ./intx/int128.hpp:617->./intx/int128.hpp:627) [58]  (1.36 ns)
	'mul' operation ('mul_ln618', ./intx/int128.hpp:618->./intx/int128.hpp:627) [63]  (5.47 ns)

 <State 10>: 6.83ns
The critical path consists of the following:
	'and' operation ('and_ln618', ./intx/int128.hpp:618->./intx/int128.hpp:627) [61]  (0 ns)
	'sub' operation ('e', ./intx/int128.hpp:618->./intx/int128.hpp:627) [64]  (1.36 ns)
	'mul' operation ('x', ./intx/int128.hpp:397) [67]  (5.47 ns)

 <State 11>: 6.83ns
The critical path consists of the following:
	'add' operation ('v3', ./intx/int128.hpp:619->./intx/int128.hpp:627) [72]  (1.36 ns)
	'mul' operation ('x', ./intx/int128.hpp:397) [75]  (5.47 ns)

 <State 12>: 6.52ns
The critical path consists of the following:
	'phi' operation ('s_word_num_bits_1_2_i', ./intx/int128.hpp:177) with incoming values : ('select_ln177', ./intx/int128.hpp:177) [78]  (0 ns)
	'sub' operation ('v4', ./intx/int128.hpp:621->./intx/int128.hpp:627) [101]  (1.05 ns)
	'mul' operation ('p', ./intx/int128.hpp:628) [102]  (5.47 ns)

 <State 13>: 4.45ns
The critical path consists of the following:
	'add' operation ('p', ./intx/int128.hpp:629) [103]  (1.36 ns)
	'icmp' operation ('icmp_ln633', ./intx/int128.hpp:633) [105]  (1.14 ns)
	'xor' operation ('xor_ln633', ./intx/int128.hpp:633) [106]  (0.148 ns)
	'select' operation ('select_ln633_1', ./intx/int128.hpp:633) [109]  (0 ns)
	'add' operation ('v', ./intx/int128.hpp:633) [110]  (1.36 ns)
	'select' operation ('v', ./intx/int128.hpp:630) [113]  (0.438 ns)

 <State 14>: 6.83ns
The critical path consists of the following:
	'mul' operation ('x', ./intx/int128.hpp:397) [116]  (5.47 ns)
	'add' operation ('p', ./intx/int128.hpp:643) [119]  (1.36 ns)

 <State 15>: 2.24ns
The critical path consists of the following:
	'add' operation ('v', ./intx/int128.hpp:646) [121]  (1.36 ns)
	'select' operation ('select_ln649', ./intx/int128.hpp:649) [128]  (0 ns)
	'select' operation ('select_ln644', ./intx/int128.hpp:644) [129]  (0.438 ns)
	'select' operation ('v', ./intx/int128.hpp:647) [131]  (0.438 ns)

 <State 16>: 1.45ns
The critical path consists of the following:
	'phi' operation ('j', ./intx/intx.hpp:618) with incoming values : ('sub_ln618', ./intx/intx.hpp:618) ('add_ln618_1', ./intx/intx.hpp:618) [137]  (0 ns)
	'add' operation ('add_ln620', ./intx/intx.hpp:620) [144]  (0.715 ns)
	'getelementptr' operation ('u_addr', ./intx/intx.hpp:620) [146]  (0 ns)
	'load' operation ('u2', ./intx/intx.hpp:620) on array 'u' [147]  (0.73 ns)

 <State 17>: 1.45ns
The critical path consists of the following:
	'add' operation ('add_ln621', ./intx/intx.hpp:621) [148]  (0.715 ns)
	'getelementptr' operation ('u_addr_1', ./intx/intx.hpp:621) [150]  (0 ns)
	'load' operation ('u1', ./intx/intx.hpp:621) on array 'u' [151]  (0.73 ns)

 <State 18>: 5.47ns
The critical path consists of the following:
	'mul' operation ('x', ./intx/int128.hpp:397) [162]  (5.47 ns)

 <State 19>: 3.56ns
The critical path consists of the following:
	'add' operation ('q', ./intx/int128.hpp:175) [165]  (1.36 ns)
	'icmp' operation ('icmp_ln176', ./intx/int128.hpp:176) [166]  (1.14 ns)
	'add' operation ('add_ln177_1', ./intx/int128.hpp:177) [168]  (0 ns)
	'add' operation ('q', ./intx/int128.hpp:177) [169]  (1.05 ns)

 <State 20>: 6.83ns
The critical path consists of the following:
	'mul' operation ('mul_ln686', ./intx/int128.hpp:686->./intx/intx.hpp:634) [170]  (5.47 ns)
	'sub' operation ('r1', ./intx/int128.hpp:686->./intx/intx.hpp:634) [171]  (1.36 ns)

 <State 21>: 6.42ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln214_1', ./intx/int128.hpp:214) [182]  (1.14 ns)
	'sub' operation ('r', ./intx/int128.hpp:216) [185]  (1.05 ns)
	'icmp' operation ('icmp_ln695', ./intx/int128.hpp:695->./intx/intx.hpp:634) [187]  (1.14 ns)
	'select' operation ('r', ./intx/int128.hpp:695->./intx/intx.hpp:634) [192]  (0.438 ns)
	'icmp' operation ('icmp_ln302_2', ./intx/int128.hpp:302) [197]  (1.14 ns)
	'sub' operation ('r', ./intx/int128.hpp:216) [203]  (1.05 ns)
	'select' operation ('r', ./intx/int128.hpp:302) [206]  (0.438 ns)

 <State 22>: 1.36ns
The critical path consists of the following:
	'call' operation ('overflow', ./intx/intx.hpp:637) to 'submul' [208]  (0 ns)
	'sub' operation ('d', ./intx/int128.hpp:196) [209]  (1.36 ns)

 <State 23>: 2.09ns
The critical path consists of the following:
	'sub' operation ('d', ./intx/int128.hpp:196) [213]  (1.36 ns)
	'store' operation ('store_ln299', D:/Xillin/Vitis_HLS/2020.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\tuple:299) of variable 'd', ./intx/int128.hpp:196 on array 'u' [215]  (0.73 ns)

 <State 24>: 1.86ns
The critical path consists of the following:
	'phi' operation ('i', ./intx/intx.hpp:586) with incoming values : ('add_ln586', ./intx/intx.hpp:586) [223]  (0 ns)
	'add' operation ('add_ln587', ./intx/intx.hpp:587) [233]  (0.715 ns)
	'icmp' operation ('addr_cmp', ./intx/intx.hpp:587) [239]  (1.14 ns)

 <State 25>: 5.18ns
The critical path consists of the following:
	'load' operation ('u_load_4', ./intx/intx.hpp:587) on array 'u' [238]  (0.73 ns)
	'select' operation ('x', ./intx/intx.hpp:587) [240]  (0.438 ns)
	'add' operation ('s', ./intx/int128.hpp:160) [243]  (1.36 ns)
	'add' operation ('t', ./intx/int128.hpp:162) [246]  (1.36 ns)
	'icmp' operation ('carry2', ./intx/int128.hpp:163) [247]  (1.14 ns)
	'or' operation ('or_ln164', ./intx/int128.hpp:164) [248]  (0.148 ns)

 <State 26>: 0.73ns
The critical path consists of the following:
	'load' operation ('u_load', ./intx/intx.hpp:644) on array 'u' [255]  (0.73 ns)

 <State 27>: 2.51ns
The critical path consists of the following:
	'load' operation ('u_load', ./intx/intx.hpp:644) on array 'u' [255]  (0.73 ns)
	'add' operation ('add_ln644_1', ./intx/intx.hpp:644) [257]  (1.05 ns)
	'store' operation ('store_ln644', ./intx/intx.hpp:644) of variable 'add_ln644_1', ./intx/intx.hpp:644 on array 'u' [258]  (0.73 ns)

 <State 28>: 0.46ns
The critical path consists of the following:
	'call' operation ('tmp', ./intx/intx.hpp:629) to 'submul' [261]  (0.46 ns)

 <State 29>: 0ns
The critical path consists of the following:

 <State 30>: 2.09ns
The critical path consists of the following:
	'sub' operation ('sub_ln629', ./intx/intx.hpp:629) [262]  (1.36 ns)
	'store' operation ('store_ln629', ./intx/intx.hpp:629) of variable 'sub_ln629', ./intx/intx.hpp:629 on array 'u' [263]  (0.73 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A



================================================================
== Vitis HLS Report for 'udivrem_by2_1'
================================================================
* Date:           Mon Aug 23 09:42:33 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        refactor-fpga
* Solution:       refactor (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.832 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       20|       28|  0.200 us|  0.280 us|   20|   28|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- Loop 1            |        2|        2|         1|          -|          -|      2|        no|
        |- VITIS_LOOP_571_1  |        3|       11|         4|          4|          1|  1 ~ 3|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 1
  Pipeline-0 : II = 4, D = 4, States = { 15 16 17 18 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 11 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 15 
19 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.29>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%reuse_addr_reg = alloca i32 1"   --->   Operation 20 'alloca' 'reuse_addr_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%reuse_reg = alloca i32 1"   --->   Operation 21 'alloca' 'reuse_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%p_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read5"   --->   Operation 22 'read' 'p_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%d0 = trunc i64 %p_read"   --->   Operation 23 'trunc' 'd0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %p_read, i32 55, i32 62" [./intx/int128.hpp:608->./intx/int128.hpp:627]   --->   Operation 24 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln609 = zext i8 %trunc_ln" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 25 'zext' 'zext_ln609' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%intx_internal_reciprocal_table_addr = getelementptr i11 %intx_internal_reciprocal_table, i64 0, i64 %zext_ln609" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 26 'getelementptr' 'intx_internal_reciprocal_table_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [2/2] (1.29ns)   --->   "%v0 = load i8 %intx_internal_reciprocal_table_addr" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 27 'load' 'v0' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 11> <Depth = 256> <ROM>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i40 @_ssdm_op_PartSelect.i40.i64.i32.i32, i64 %p_read, i32 24, i32 63" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 28 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %p_read, i32 1, i32 63" [./intx/int128.hpp:617->./intx/int128.hpp:627]   --->   Operation 29 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.99>
ST_2 : Operation 30 [1/2] (1.29ns)   --->   "%v0 = load i8 %intx_internal_reciprocal_table_addr" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 30 'load' 'v0' <Predicate = true> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 11> <Depth = 256> <ROM>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln609_3 = zext i11 %v0" [./intx/int128.hpp:609->./intx/int128.hpp:627]   --->   Operation 31 'zext' 'zext_ln609_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [4/4] (0.69ns) (root node of the DSP)   --->   "%mul_ln612 = mul i22 %zext_ln609_3, i22 %zext_ln609_3" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 32 'mul' 'mul_ln612' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 0.69>
ST_3 : Operation 33 [3/4] (0.69ns) (root node of the DSP)   --->   "%mul_ln612 = mul i22 %zext_ln609_3, i22 %zext_ln609_3" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 33 'mul' 'mul_ln612' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 0.69>
ST_4 : Operation 34 [2/4] (0.69ns) (root node of the DSP)   --->   "%mul_ln612 = mul i22 %zext_ln609_3, i22 %zext_ln609_3" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 34 'mul' 'mul_ln612' <Predicate = true> <Delay = 0.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 6.31>
ST_5 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln611 = zext i40 %trunc_ln3" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 35 'zext' 'zext_ln611' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 36 [1/1] (1.18ns)   --->   "%d40 = add i41 %zext_ln611, i41 1" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 36 'add' 'd40' <Predicate = true> <Delay = 1.18> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln611_6 = zext i41 %d40" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 37 'zext' 'zext_ln611_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i11.i11, i11 %v0, i11 0" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 38 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln612 = mul i22 %zext_ln609_3, i22 %zext_ln609_3" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 39 'mul' 'mul_ln612' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln612 = zext i22 %mul_ln612" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 40 'zext' 'zext_ln612' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (4.00ns)   --->   "%mul_ln612_3 = mul i62 %zext_ln611_6, i62 %zext_ln612" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 41 'mul' 'mul_ln612_3' <Predicate = true> <Delay = 4.00> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%tmp = partselect i22 @_ssdm_op_PartSelect.i22.i62.i32.i32, i62 %mul_ln612_3, i32 40, i32 61" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 42 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln612_7 = zext i22 %tmp" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 43 'zext' 'zext_ln612_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (1.12ns)   --->   "%add_ln612 = add i22 %shl_ln, i22 4194303" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 44 'add' 'add_ln612' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln612_8 = zext i22 %add_ln612" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 45 'zext' 'zext_ln612_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (1.12ns)   --->   "%v1 = sub i23 %zext_ln612_8, i23 %zext_ln612_7" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 46 'sub' 'v1' <Predicate = true> <Delay = 1.12> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.00>
ST_6 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln611_5 = zext i41 %d40" [./intx/int128.hpp:611->./intx/int128.hpp:627]   --->   Operation 47 'zext' 'zext_ln611_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 48 [1/1] (0.00ns)   --->   "%sext_ln612 = sext i23 %v1" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 48 'sext' 'sext_ln612' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln612_9 = zext i32 %sext_ln612" [./intx/int128.hpp:612->./intx/int128.hpp:627]   --->   Operation 49 'zext' 'zext_ln612_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 50 [1/1] (4.00ns)   --->   "%mul_ln614 = mul i64 %zext_ln611_5, i64 %zext_ln612_9" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 50 'mul' 'mul_ln614' <Predicate = true> <Delay = 4.00> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.83>
ST_7 : Operation 51 [1/1] (1.36ns)   --->   "%sub_ln614 = sub i64 1152921504606846976, i64 %mul_ln614" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 51 'sub' 'sub_ln614' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 52 [1/1] (5.47ns)   --->   "%mul_ln614_3 = mul i64 %sub_ln614, i64 %zext_ln612_9" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 52 'mul' 'mul_ln614_3' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln4 = partselect i17 @_ssdm_op_PartSelect.i17.i64.i32.i32, i64 %mul_ln614_3, i32 47, i32 63" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 53 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 6.82>
ST_8 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i36 @_ssdm_op_BitConcatenate.i36.i23.i13, i23 %v1, i13 0" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 54 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln614 = sext i36 %tmp_s" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 55 'sext' 'sext_ln614' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln614 = zext i45 %sext_ln614" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 56 'zext' 'zext_ln614' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln614_5 = zext i17 %trunc_ln4" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 57 'zext' 'zext_ln614_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 58 [1/1] (1.24ns)   --->   "%v2 = add i46 %zext_ln614_5, i46 %zext_ln614" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 58 'add' 'v2' <Predicate = true> <Delay = 1.24> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln614_6 = zext i46 %v2" [./intx/int128.hpp:614->./intx/int128.hpp:627]   --->   Operation 59 'zext' 'zext_ln614_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln616 = zext i1 %d0" [./intx/int128.hpp:616->./intx/int128.hpp:627]   --->   Operation 60 'zext' 'zext_ln616' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln617 = zext i63 %lshr_ln" [./intx/int128.hpp:617->./intx/int128.hpp:627]   --->   Operation 61 'zext' 'zext_ln617' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 62 [1/1] (1.35ns)   --->   "%d63 = add i64 %zext_ln617, i64 %zext_ln616" [./intx/int128.hpp:617->./intx/int128.hpp:627]   --->   Operation 62 'add' 'd63' <Predicate = true> <Delay = 1.35> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 63 [1/1] (5.47ns)   --->   "%mul_ln618 = mul i64 %zext_ln614_6, i64 %d63" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 63 'mul' 'mul_ln618' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln619 = trunc i46 %v2" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 64 'trunc' 'trunc_ln619' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 6.83>
ST_9 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node e)   --->   "%trunc_ln5 = partselect i45 @_ssdm_op_PartSelect.i45.i46.i32.i32, i46 %v2, i32 1, i32 45" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 65 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node e)   --->   "%select_ln618 = select i1 %d0, i45 35184372088831, i45 0" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 66 'select' 'select_ln618' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node e)   --->   "%and_ln618 = and i45 %trunc_ln5, i45 %select_ln618" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 67 'and' 'and_ln618' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node e)   --->   "%zext_ln618 = zext i45 %and_ln618" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 68 'zext' 'zext_ln618' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 69 [1/1] (1.36ns) (out node of the LUT)   --->   "%e = sub i64 %zext_ln618, i64 %mul_ln618" [./intx/int128.hpp:618->./intx/int128.hpp:627]   --->   Operation 69 'sub' 'e' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln397_17 = zext i46 %v2" [./intx/int128.hpp:397]   --->   Operation 70 'zext' 'zext_ln397_17' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln397_18 = zext i64 %e" [./intx/int128.hpp:397]   --->   Operation 71 'zext' 'zext_ln397_18' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 72 [1/1] (5.47ns)   --->   "%x_17 = mul i110 %zext_ln397_18, i110 %zext_ln397_17" [./intx/int128.hpp:397]   --->   Operation 72 'mul' 'x_17' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i45 @_ssdm_op_PartSelect.i45.i110.i32.i32, i110 %x_17, i32 65, i32 109" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 73 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 6.83>
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%p_read_1 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read2"   --->   Operation 74 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 75 [1/1] (0.00ns)   --->   "%len_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %len"   --->   Operation 75 'read' 'len_read' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln619 = zext i45 %trunc_ln6" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 76 'zext' 'zext_ln619' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (0.00ns)   --->   "%shl_ln3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i33.i31, i33 %trunc_ln619, i31 0" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 77 'bitconcatenate' 'shl_ln3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 78 [1/1] (1.36ns)   --->   "%v3 = add i64 %shl_ln3, i64 %zext_ln619" [./intx/int128.hpp:619->./intx/int128.hpp:627]   --->   Operation 78 'add' 'v3' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln397_19 = zext i64 %v3" [./intx/int128.hpp:397]   --->   Operation 79 'zext' 'zext_ln397_19' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln397_20 = zext i64 %p_read" [./intx/int128.hpp:397]   --->   Operation 80 'zext' 'zext_ln397_20' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 81 [1/1] (5.47ns)   --->   "%x_19 = mul i128 %zext_ln397_19, i128 %zext_ln397_20" [./intx/int128.hpp:397]   --->   Operation 81 'mul' 'x_19' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 82 [1/1] (0.46ns)   --->   "%br_ln173 = br void %_ZN4intx4uintILj128EEC2Ev.exit.i.i.i" [./intx/int128.hpp:173]   --->   Operation 82 'br' 'br_ln173' <Predicate = true> <Delay = 0.46>

State 11 <SV = 10> <Delay = 6.52>
ST_11 : Operation 83 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_2_i = phi i64 %select_ln177, void %.split.i, i64 0, void %._crit_edge" [./intx/int128.hpp:177]   --->   Operation 83 'phi' 's_word_num_bits_1_2_i' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 84 [1/1] (0.00ns)   --->   "%i = phi i2 %i_5, void %.split.i, i2 0, void %._crit_edge"   --->   Operation 84 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 85 [1/1] (0.00ns)   --->   "%k = phi i1 %k_3, void %.split.i, i1 0, void %._crit_edge"   --->   Operation 85 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 86 [1/1] (0.62ns)   --->   "%i_5 = add i2 %i, i2 1" [./intx/int128.hpp:173]   --->   Operation 86 'add' 'i_5' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 87 [1/1] (0.39ns)   --->   "%icmp_ln173 = icmp_eq  i2 %i, i2 2" [./intx/int128.hpp:173]   --->   Operation 87 'icmp' 'icmp_ln173' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 88 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 2, i64 2, i64 2"   --->   Operation 88 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln173 = br i1 %icmp_ln173, void %.split.i, void %reciprocal_2by1.exit_ifconv" [./intx/int128.hpp:173]   --->   Operation 89 'br' 'br_ln173' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 90 [1/1] (0.00ns)   --->   "%trunc_ln117 = trunc i2 %i" [./intx/int128.hpp:117]   --->   Operation 90 'trunc' 'trunc_ln117' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_11 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i64 @_ssdm_op_PartSelect.i64.i128.i32.i32, i128 %x_19, i32 64, i32 127" [./intx/int128.hpp:175]   --->   Operation 91 'partselect' 'tmp_1' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_11 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln175 = trunc i128 %x_19" [./intx/int128.hpp:175]   --->   Operation 92 'trunc' 'trunc_ln175' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_11 : Operation 93 [1/1] (0.43ns)   --->   "%select_ln175 = select i1 %trunc_ln117, i64 %tmp_1, i64 %trunc_ln175" [./intx/int128.hpp:175]   --->   Operation 93 'select' 'select_ln175' <Predicate = (!icmp_ln173)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node add_ln175)   --->   "%select_ln175_3 = select i1 %trunc_ln117, i64 0, i64 %p_read" [./intx/int128.hpp:175]   --->   Operation 94 'select' 'select_ln175_3' <Predicate = (!icmp_ln173)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 95 [1/1] (1.36ns) (out node of the LUT)   --->   "%add_ln175 = add i64 %select_ln175_3, i64 %select_ln175" [./intx/int128.hpp:175]   --->   Operation 95 'add' 'add_ln175' <Predicate = (!icmp_ln173)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 96 [1/1] (1.14ns)   --->   "%k1 = icmp_ult  i64 %add_ln175, i64 %select_ln175" [./intx/int128.hpp:176]   --->   Operation 96 'icmp' 'k1' <Predicate = (!icmp_ln173)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln177 = zext i1 %k" [./intx/int128.hpp:177]   --->   Operation 97 'zext' 'zext_ln177' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_11 : Operation 98 [1/1] (1.36ns)   --->   "%add_ln177 = add i64 %add_ln175, i64 %zext_ln177" [./intx/int128.hpp:177]   --->   Operation 98 'add' 'add_ln177' <Predicate = (!icmp_ln173)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 99 [1/1] (0.43ns)   --->   "%select_ln177 = select i1 %trunc_ln117, i64 %add_ln177, i64 %s_word_num_bits_1_2_i" [./intx/int128.hpp:177]   --->   Operation 99 'select' 'select_ln177' <Predicate = (!icmp_ln173)> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 100 [1/1] (1.14ns)   --->   "%icmp_ln178 = icmp_ult  i64 %add_ln177, i64 %zext_ln177" [./intx/int128.hpp:178]   --->   Operation 100 'icmp' 'icmp_ln178' <Predicate = (!icmp_ln173)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 101 [1/1] (0.14ns)   --->   "%k_3 = or i1 %icmp_ln178, i1 %k1" [./intx/int128.hpp:178]   --->   Operation 101 'or' 'k_3' <Predicate = (!icmp_ln173)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZN4intx4uintILj128EEC2Ev.exit.i.i.i"   --->   Operation 102 'br' 'br_ln0' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_11 : Operation 103 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln621 = sub i64 %v3, i64 %p_read" [./intx/int128.hpp:621->./intx/int128.hpp:627]   --->   Operation 103 'sub' 'sub_ln621' <Predicate = (icmp_ln173)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 104 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%v4 = sub i64 %sub_ln621, i64 %s_word_num_bits_1_2_i" [./intx/int128.hpp:621->./intx/int128.hpp:627]   --->   Operation 104 'sub' 'v4' <Predicate = (icmp_ln173)> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 105 [1/1] (5.47ns)   --->   "%p = mul i64 %v4, i64 %p_read" [./intx/int128.hpp:628]   --->   Operation 105 'mul' 'p' <Predicate = (icmp_ln173)> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 106 [1/1] (0.46ns)   --->   "%store_ln0 = store i64 0, i64 %reuse_reg"   --->   Operation 106 'store' 'store_ln0' <Predicate = (icmp_ln173)> <Delay = 0.46>
ST_11 : Operation 107 [1/1] (0.46ns)   --->   "%store_ln0 = store i64 18446744073709551615, i64 %reuse_addr_reg"   --->   Operation 107 'store' 'store_ln0' <Predicate = (icmp_ln173)> <Delay = 0.46>

State 12 <SV = 11> <Delay = 4.45>
ST_12 : Operation 108 [1/1] (1.36ns)   --->   "%p_13 = add i64 %p, i64 %p_read_1" [./intx/int128.hpp:629]   --->   Operation 108 'add' 'p_13' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 109 [1/1] (1.14ns)   --->   "%icmp_ln630 = icmp_ult  i64 %p_13, i64 %p_read_1" [./intx/int128.hpp:630]   --->   Operation 109 'icmp' 'icmp_ln630' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 110 [1/1] (1.14ns)   --->   "%icmp_ln633 = icmp_ult  i64 %p_13, i64 %p_read" [./intx/int128.hpp:633]   --->   Operation 110 'icmp' 'icmp_ln633' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 111 [1/1] (0.14ns)   --->   "%xor_ln633 = xor i1 %icmp_ln633, i1 1" [./intx/int128.hpp:633]   --->   Operation 111 'xor' 'xor_ln633' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node v_14)   --->   "%select_ln633_3 = select i1 %xor_ln633, i64 18446744073709551614, i64 18446744073709551615" [./intx/int128.hpp:633]   --->   Operation 112 'select' 'select_ln633_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 113 [1/1] (1.36ns) (out node of the LUT)   --->   "%v_14 = add i64 %select_ln633_3, i64 %v4" [./intx/int128.hpp:633]   --->   Operation 113 'add' 'v_14' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 114 [1/1] (0.43ns)   --->   "%v_18 = select i1 %icmp_ln630, i64 %v_14, i64 %v4" [./intx/int128.hpp:630]   --->   Operation 114 'select' 'v_18' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 13 <SV = 12> <Delay = 6.83>
ST_13 : Operation 115 [1/1] (1.36ns)   --->   "%p_14 = sub i64 %p_13, i64 %p_read" [./intx/int128.hpp:636]   --->   Operation 115 'sub' 'p_14' <Predicate = (xor_ln633 & icmp_ln630)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node p_16)   --->   "%p_15 = select i1 %xor_ln633, i64 %p_14, i64 %p_13" [./intx/int128.hpp:633]   --->   Operation 116 'select' 'p_15' <Predicate = (icmp_ln630)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 117 [1/1] (1.36ns) (out node of the LUT)   --->   "%p_16 = sub i64 %p_15, i64 %p_read" [./intx/int128.hpp:638]   --->   Operation 117 'sub' 'p_16' <Predicate = (icmp_ln630)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node p_18)   --->   "%p_17 = select i1 %icmp_ln630, i64 %p_16, i64 %p_13" [./intx/int128.hpp:630]   --->   Operation 118 'select' 'p_17' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln397 = zext i64 %v_18" [./intx/int128.hpp:397]   --->   Operation 119 'zext' 'zext_ln397' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln397_11 = zext i64 %p_read_1" [./intx/int128.hpp:397]   --->   Operation 120 'zext' 'zext_ln397_11' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 121 [1/1] (5.47ns)   --->   "%x_21 = mul i128 %zext_ln397, i128 %zext_ln397_11" [./intx/int128.hpp:397]   --->   Operation 121 'mul' 'x_21' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 122 [1/1] (0.00ns)   --->   "%t_words_s = trunc i128 %x_21" [./intx/int128.hpp:107]   --->   Operation 122 'trunc' 't_words_s' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i64 @_ssdm_op_PartSelect.i64.i128.i32.i32, i128 %x_21, i32 64, i32 127" [./intx/int128.hpp:107]   --->   Operation 123 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 124 [1/1] (1.36ns) (out node of the LUT)   --->   "%p_18 = add i64 %trunc_ln7, i64 %p_17" [./intx/int128.hpp:643]   --->   Operation 124 'add' 'p_18' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 125 [1/1] (1.14ns)   --->   "%icmp_ln649_3 = icmp_ult  i64 %t_words_s, i64 %p_read_1" [./intx/int128.hpp:649]   --->   Operation 125 'icmp' 'icmp_ln649_3' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 126 [1/1] (0.14ns)   --->   "%xor_ln567 = xor i2 %len_read, i2 2" [./intx/intx.hpp:567]   --->   Operation 126 'xor' 'xor_ln567' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln567 = zext i2 %xor_ln567" [./intx/intx.hpp:567]   --->   Operation 127 'zext' 'zext_ln567' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 128 [1/1] (0.00ns)   --->   "%u_addr = getelementptr i64 %u, i64 0, i64 %zext_ln567" [./intx/intx.hpp:567]   --->   Operation 128 'getelementptr' 'u_addr' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 129 [2/2] (0.73ns)   --->   "%u_load = load i2 %u_addr" [./intx/intx.hpp:567]   --->   Operation 129 'load' 'u_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_13 : Operation 130 [1/1] (0.62ns)   --->   "%add_ln567 = add i2 %len_read, i2 3" [./intx/intx.hpp:567]   --->   Operation 130 'add' 'add_ln567' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 131 [1/1] (0.00ns)   --->   "%zext_ln567_1 = zext i2 %add_ln567" [./intx/intx.hpp:567]   --->   Operation 131 'zext' 'zext_ln567_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 132 [1/1] (0.00ns)   --->   "%u_addr_7 = getelementptr i64 %u, i64 0, i64 %zext_ln567_1" [./intx/intx.hpp:567]   --->   Operation 132 'getelementptr' 'u_addr_7' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 133 [2/2] (0.73ns)   --->   "%u_load_9 = load i2 %u_addr_7" [./intx/intx.hpp:567]   --->   Operation 133 'load' 'u_load_9' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_13 : Operation 134 [1/1] (0.73ns)   --->   "%store_ln568 = store i64 0, i2 %u_addr" [./intx/intx.hpp:568]   --->   Operation 134 'store' 'store_ln568' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_13 : Operation 135 [1/1] (0.73ns)   --->   "%store_ln568 = store i64 0, i2 %u_addr_7" [./intx/intx.hpp:568]   --->   Operation 135 'store' 'store_ln568' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>

State 14 <SV = 13> <Delay = 2.23>
ST_14 : Operation 136 [1/1] (1.14ns)   --->   "%icmp_ln644 = icmp_ult  i64 %p_18, i64 %trunc_ln7" [./intx/int128.hpp:644]   --->   Operation 136 'icmp' 'icmp_ln644' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 137 [1/1] (1.36ns)   --->   "%v = add i64 %v_18, i64 18446744073709551615" [./intx/int128.hpp:646]   --->   Operation 137 'add' 'v' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 138 [1/1] (1.14ns)   --->   "%icmp_ln647 = icmp_ult  i64 %p_18, i64 %p_read" [./intx/int128.hpp:647]   --->   Operation 138 'icmp' 'icmp_ln647' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 139 [1/1] (1.14ns)   --->   "%icmp_ln649 = icmp_ugt  i64 %p_18, i64 %p_read" [./intx/int128.hpp:649]   --->   Operation 139 'icmp' 'icmp_ln649' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node select_ln644)   --->   "%xor_ln649 = xor i1 %icmp_ln649_3, i1 1" [./intx/int128.hpp:649]   --->   Operation 140 'xor' 'xor_ln649' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node select_ln644)   --->   "%or_ln649 = or i1 %icmp_ln649, i1 %xor_ln649" [./intx/int128.hpp:649]   --->   Operation 141 'or' 'or_ln649' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 142 [1/1] (1.36ns)   --->   "%add_ln650 = add i64 %v_18, i64 18446744073709551614" [./intx/int128.hpp:650]   --->   Operation 142 'add' 'add_ln650' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node select_ln644)   --->   "%select_ln649 = select i1 %or_ln649, i64 %add_ln650, i64 %v" [./intx/int128.hpp:649]   --->   Operation 143 'select' 'select_ln649' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 144 [1/1] (0.43ns) (out node of the LUT)   --->   "%select_ln644 = select i1 %icmp_ln644, i64 %select_ln649, i64 %v_18" [./intx/int128.hpp:644]   --->   Operation 144 'select' 'select_ln644' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node v_17)   --->   "%and_ln647 = and i1 %icmp_ln644, i1 %icmp_ln647" [./intx/int128.hpp:647]   --->   Operation 145 'and' 'and_ln647' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 146 [1/1] (0.43ns) (out node of the LUT)   --->   "%v_17 = select i1 %and_ln647, i64 %v, i64 %select_ln644" [./intx/int128.hpp:647]   --->   Operation 146 'select' 'v_17' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 147 [1/2] (0.73ns)   --->   "%u_load = load i2 %u_addr" [./intx/intx.hpp:567]   --->   Operation 147 'load' 'u_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_14 : Operation 148 [1/2] (0.73ns)   --->   "%u_load_9 = load i2 %u_addr_7" [./intx/intx.hpp:567]   --->   Operation 148 'load' 'u_load_9' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_14 : Operation 149 [1/1] (0.62ns)   --->   "%add_ln570 = add i2 %len_read, i2 1" [./intx/intx.hpp:570]   --->   Operation 149 'add' 'add_ln570' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln397_21 = zext i2 %add_ln570" [./intx/int128.hpp:397]   --->   Operation 150 'zext' 'zext_ln397_21' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 151 [1/1] (0.00ns)   --->   "%zext_ln397_22 = zext i64 %v_17" [./intx/int128.hpp:397]   --->   Operation 151 'zext' 'zext_ln397_22' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 152 [1/1] (0.46ns)   --->   "%br_ln571 = br void %_ifconv" [./intx/intx.hpp:571]   --->   Operation 152 'br' 'br_ln571' <Predicate = true> <Delay = 0.46>

State 15 <SV = 14> <Delay = 5.47>
ST_15 : Operation 153 [1/1] (0.00ns)   --->   "%u2 = phi i64 %u_load_9, void %reciprocal_2by1.exit_ifconv, i64 %r_33, void %_ifconv"   --->   Operation 153 'phi' 'u2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 154 [1/1] (0.00ns)   --->   "%idx = phi i2 0, void %reciprocal_2by1.exit_ifconv, i2 %add_ln574, void %_ifconv" [./intx/intx.hpp:574]   --->   Operation 154 'phi' 'idx' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 155 [1/1] (0.00ns)   --->   "%sext_ln570 = sext i2 %idx" [./intx/intx.hpp:570]   --->   Operation 155 'sext' 'sext_ln570' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 156 [1/1] (0.62ns)   --->   "%add_ln570_1 = add i3 %sext_ln570, i3 %zext_ln397_21" [./intx/intx.hpp:570]   --->   Operation 156 'add' 'add_ln570_1' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 157 [1/1] (0.00ns)   --->   "%zext_ln570 = zext i3 %add_ln570_1" [./intx/intx.hpp:570]   --->   Operation 157 'zext' 'zext_ln570' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 158 [1/1] (0.00ns)   --->   "%it = getelementptr i64 %u, i64 0, i64 %zext_ln570" [./intx/intx.hpp:570]   --->   Operation 158 'getelementptr' 'it' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 159 [1/1] (0.00ns)   --->   "%reuse_addr_reg_load = load i64 %reuse_addr_reg"   --->   Operation 159 'load' 'reuse_addr_reg_load' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 160 [2/2] (0.73ns)   --->   "%it_load = load i2 %it" [./intx/intx.hpp:573]   --->   Operation 160 'load' 'it_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_15 : Operation 161 [1/1] (1.14ns)   --->   "%addr_cmp = icmp_eq  i64 %reuse_addr_reg_load, i64 %zext_ln570" [./intx/intx.hpp:570]   --->   Operation 161 'icmp' 'addr_cmp' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln397_23 = zext i64 %u2" [./intx/int128.hpp:397]   --->   Operation 162 'zext' 'zext_ln397_23' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 163 [1/1] (5.47ns)   --->   "%mul_ln397 = mul i128 %zext_ln397_22, i128 %zext_ln397_23" [./intx/int128.hpp:397]   --->   Operation 163 'mul' 'mul_ln397' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 164 [1/1] (0.00ns)   --->   "%q = trunc i128 %mul_ln397" [./intx/int128.hpp:107]   --->   Operation 164 'trunc' 'q' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 165 [1/1] (0.00ns)   --->   "%q_12 = partselect i64 @_ssdm_op_PartSelect.i64.i128.i32.i32, i128 %mul_ln397, i32 64, i32 127" [./intx/int128.hpp:107]   --->   Operation 165 'partselect' 'q_12' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 166 [1/1] (0.46ns)   --->   "%store_ln570 = store i64 %zext_ln570, i64 %reuse_addr_reg" [./intx/intx.hpp:570]   --->   Operation 166 'store' 'store_ln570' <Predicate = true> <Delay = 0.46>
ST_15 : Operation 167 [1/1] (0.56ns)   --->   "%icmp_ln574 = icmp_eq  i3 %add_ln570_1, i3 0" [./intx/intx.hpp:574]   --->   Operation 167 'icmp' 'icmp_ln574' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 3.56>
ST_16 : Operation 168 [1/1] (0.00ns)   --->   "%u1 = phi i64 %u_load, void %reciprocal_2by1.exit_ifconv, i64 %r_32, void %_ifconv"   --->   Operation 168 'phi' 'u1' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 169 [1/1] (0.00ns)   --->   "%reuse_reg_load = load i64 %reuse_reg"   --->   Operation 169 'load' 'reuse_reg_load' <Predicate = (addr_cmp)> <Delay = 0.00>
ST_16 : Operation 170 [1/2] (0.73ns)   --->   "%it_load = load i2 %it" [./intx/intx.hpp:573]   --->   Operation 170 'load' 'it_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_16 : Operation 171 [1/1] (0.43ns)   --->   "%u0 = select i1 %addr_cmp, i64 %reuse_reg_load, i64 %it_load" [./intx/intx.hpp:570]   --->   Operation 171 'select' 'u0' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 172 [1/1] (1.36ns)   --->   "%q_13 = add i64 %q, i64 %u1" [./intx/int128.hpp:175]   --->   Operation 172 'add' 'q_13' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 173 [1/1] (1.14ns)   --->   "%icmp_ln176 = icmp_ult  i64 %q_13, i64 %q" [./intx/int128.hpp:176]   --->   Operation 173 'icmp' 'icmp_ln176' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln177_5 = zext i1 %icmp_ln176" [./intx/int128.hpp:177]   --->   Operation 174 'zext' 'zext_ln177_5' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 175 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln177_9 = add i64 %u2, i64 %zext_ln177_5" [./intx/int128.hpp:177]   --->   Operation 175 'add' 'add_ln177_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 176 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%q_14 = add i64 %add_ln177_9, i64 %q_12" [./intx/int128.hpp:177]   --->   Operation 176 'add' 'q_14' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 17 <SV = 16> <Delay = 6.83>
ST_17 : Operation 177 [1/1] (5.47ns)   --->   "%mul_ln686 = mul i64 %q_14, i64 %p_read" [./intx/int128.hpp:686->./intx/intx.hpp:573]   --->   Operation 177 'mul' 'mul_ln686' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 178 [1/1] (1.36ns)   --->   "%r1 = sub i64 %u1, i64 %mul_ln686" [./intx/int128.hpp:686->./intx/intx.hpp:573]   --->   Operation 178 'sub' 'r1' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 179 [1/1] (0.00ns)   --->   "%zext_ln397_24 = zext i64 %q_14" [./intx/int128.hpp:397]   --->   Operation 179 'zext' 'zext_ln397_24' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 180 [1/1] (5.47ns)   --->   "%mul_ln397_3 = mul i128 %zext_ln397_11, i128 %zext_ln397_24" [./intx/int128.hpp:397]   --->   Operation 180 'mul' 'mul_ln397_3' <Predicate = true> <Delay = 5.47> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 5.47> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 181 [1/1] (0.00ns)   --->   "%t = trunc i128 %mul_ln397_3" [./intx/int128.hpp:107]   --->   Operation 181 'trunc' 't' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 182 [1/1] (0.00ns)   --->   "%t_5 = partselect i64 @_ssdm_op_PartSelect.i64.i128.i32.i32, i128 %mul_ln397_3, i32 64, i32 127" [./intx/int128.hpp:107]   --->   Operation 182 'partselect' 't_5' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 183 [1/1] (1.36ns)   --->   "%r_26 = sub i64 %u0, i64 %t" [./intx/int128.hpp:213]   --->   Operation 183 'sub' 'r_26' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 184 [1/1] (1.14ns)   --->   "%icmp_ln214 = icmp_ugt  i64 %t, i64 %u0" [./intx/int128.hpp:214]   --->   Operation 184 'icmp' 'icmp_ln214' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 6.45>
ST_18 : Operation 185 [1/1] (0.62ns)   --->   "%add_ln574 = add i2 %idx, i2 3" [./intx/intx.hpp:574]   --->   Operation 185 'add' 'add_ln574' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 186 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 186 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 187 [1/1] (0.00ns)   --->   "%specloopname_ln570 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [./intx/intx.hpp:570]   --->   Operation 187 'specloopname' 'specloopname_ln570' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 188 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln213_9 = sub i64 %r1, i64 %t_5" [./intx/int128.hpp:213]   --->   Operation 188 'sub' 'sub_ln213_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i1 %icmp_ln214" [./intx/int128.hpp:215]   --->   Operation 189 'zext' 'zext_ln215' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 190 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%sub_ln216 = sub i64 %sub_ln213_9, i64 %zext_ln215" [./intx/int128.hpp:216]   --->   Operation 190 'sub' 'sub_ln216' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 191 [1/1] (1.36ns)   --->   "%r = sub i64 %r_26, i64 %p_read_1" [./intx/int128.hpp:213]   --->   Operation 191 'sub' 'r' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 192 [1/1] (1.14ns)   --->   "%icmp_ln214_3 = icmp_ult  i64 %r_26, i64 %p_read_1" [./intx/int128.hpp:214]   --->   Operation 192 'icmp' 'icmp_ln214_3' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 193 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln213_11 = sub i64 %sub_ln216, i64 %p_read" [./intx/int128.hpp:213]   --->   Operation 193 'sub' 'sub_ln213_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln215_5 = zext i1 %icmp_ln214_3" [./intx/int128.hpp:215]   --->   Operation 194 'zext' 'zext_ln215_5' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 195 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%r_34 = sub i64 %sub_ln213_11, i64 %zext_ln215_5" [./intx/int128.hpp:216]   --->   Operation 195 'sub' 'r_34' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 196 [1/1] (1.36ns)   --->   "%q_15 = add i64 %q_14, i64 1" [./intx/int128.hpp:693->./intx/intx.hpp:573]   --->   Operation 196 'add' 'q_15' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 197 [1/1] (1.14ns)   --->   "%icmp_ln695 = icmp_ult  i64 %r_34, i64 %q_13" [./intx/int128.hpp:695->./intx/intx.hpp:573]   --->   Operation 197 'icmp' 'icmp_ln695' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 198 [1/1] (0.00ns)   --->   "%empty_71 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 3, i64 0"   --->   Operation 198 'speclooptripcount' 'empty_71' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 199 [1/1] (1.14ns)   --->   "%icmp_ln176_6 = icmp_ult  i64 %r_26, i64 %r" [./intx/int128.hpp:176]   --->   Operation 199 'icmp' 'icmp_ln176_6' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 200 [1/1] (0.00ns)   --->   "%zext_ln177_6 = zext i1 %icmp_ln176_6" [./intx/int128.hpp:177]   --->   Operation 200 'zext' 'zext_ln177_6' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 201 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln177_11 = add i64 %zext_ln177_6, i64 %p_read" [./intx/int128.hpp:177]   --->   Operation 201 'add' 'add_ln177_11' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 202 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%r_27 = add i64 %add_ln177_11, i64 %r_34" [./intx/int128.hpp:177]   --->   Operation 202 'add' 'r_27' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 203 [1/1] (0.43ns)   --->   "%r_28 = select i1 %icmp_ln695, i64 %r, i64 %r_26" [./intx/int128.hpp:695->./intx/intx.hpp:573]   --->   Operation 203 'select' 'r_28' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 204 [1/1] (0.43ns)   --->   "%r_29 = select i1 %icmp_ln695, i64 %r_34, i64 %r_27" [./intx/int128.hpp:695->./intx/intx.hpp:573]   --->   Operation 204 'select' 'r_29' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 205 [1/1] (0.43ns)   --->   "%q_16 = select i1 %icmp_ln695, i64 %q_15, i64 %q_14" [./intx/int128.hpp:695->./intx/intx.hpp:573]   --->   Operation 205 'select' 'q_16' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 206 [1/1] (1.14ns)   --->   "%icmp_ln302 = icmp_ult  i64 %r_29, i64 %p_read" [./intx/int128.hpp:302]   --->   Operation 206 'icmp' 'icmp_ln302' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 207 [1/1] (1.14ns)   --->   "%icmp_ln302_5 = icmp_eq  i64 %r_29, i64 %p_read" [./intx/int128.hpp:302]   --->   Operation 207 'icmp' 'icmp_ln302_5' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 208 [1/1] (1.14ns)   --->   "%icmp_ln302_6 = icmp_ult  i64 %r_28, i64 %p_read_1" [./intx/int128.hpp:302]   --->   Operation 208 'icmp' 'icmp_ln302_6' <Predicate = true> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node or_ln302)   --->   "%and_ln302 = and i1 %icmp_ln302_5, i1 %icmp_ln302_6" [./intx/int128.hpp:302]   --->   Operation 209 'and' 'and_ln302' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 210 [1/1] (0.14ns) (out node of the LUT)   --->   "%or_ln302 = or i1 %icmp_ln302, i1 %and_ln302" [./intx/int128.hpp:302]   --->   Operation 210 'or' 'or_ln302' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 211 [1/1] (1.36ns)   --->   "%r_30 = sub i64 %r_28, i64 %p_read_1" [./intx/int128.hpp:213]   --->   Operation 211 'sub' 'r_30' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 212 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln213_12 = sub i64 %r_29, i64 %p_read" [./intx/int128.hpp:213]   --->   Operation 212 'sub' 'sub_ln213_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 213 [1/1] (0.00ns)   --->   "%zext_ln215_6 = zext i1 %icmp_ln302_6" [./intx/int128.hpp:215]   --->   Operation 213 'zext' 'zext_ln215_6' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 214 [1/1] (1.05ns) (root node of TernaryAdder)   --->   "%r_31 = sub i64 %sub_ln213_12, i64 %zext_ln215_6" [./intx/int128.hpp:216]   --->   Operation 214 'sub' 'r_31' <Predicate = true> <Delay = 1.05> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.52> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 215 [1/1] (1.36ns)   --->   "%add_ln703 = add i64 %q_16, i64 1" [./intx/int128.hpp:703->./intx/intx.hpp:573]   --->   Operation 215 'add' 'add_ln703' <Predicate = true> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 216 [1/1] (0.43ns)   --->   "%r_32 = select i1 %or_ln302, i64 %r_28, i64 %r_30" [./intx/int128.hpp:302]   --->   Operation 216 'select' 'r_32' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 217 [1/1] (0.43ns)   --->   "%r_33 = select i1 %or_ln302, i64 %r_29, i64 %r_31" [./intx/int128.hpp:302]   --->   Operation 217 'select' 'r_33' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 218 [1/1] (0.43ns)   --->   "%select_ln302 = select i1 %or_ln302, i64 %q_16, i64 %add_ln703" [./intx/int128.hpp:302]   --->   Operation 218 'select' 'select_ln302' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 219 [1/1] (0.73ns)   --->   "%store_ln299 = store i64 %select_ln302, i2 %it" [D:/Xillin/Vitis_HLS/2020.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\tuple:299]   --->   Operation 219 'store' 'store_ln299' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4> <RAM>
ST_18 : Operation 220 [1/1] (0.46ns)   --->   "%store_ln302 = store i64 %select_ln302, i64 %reuse_reg" [./intx/int128.hpp:302]   --->   Operation 220 'store' 'store_ln302' <Predicate = true> <Delay = 0.46>
ST_18 : Operation 221 [1/1] (0.00ns)   --->   "%br_ln574 = br i1 %icmp_ln574, void %_ifconv, void" [./intx/intx.hpp:574]   --->   Operation 221 'br' 'br_ln574' <Predicate = true> <Delay = 0.00>

State 19 <SV = 18> <Delay = 0.00>
ST_19 : Operation 222 [1/1] (0.00ns)   --->   "%mrv = insertvalue i128 <undef>, i64 %r_32" [./intx/intx.hpp:576]   --->   Operation 222 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 223 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i128 %mrv, i64 %r_33" [./intx/intx.hpp:576]   --->   Operation 223 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 224 [1/1] (0.00ns)   --->   "%ret_ln576 = ret i128 %mrv_1" [./intx/intx.hpp:576]   --->   Operation 224 'ret' 'ret_ln576' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.3ns
The critical path consists of the following:
	wire read on port 'p_read5' [9]  (0 ns)
	'getelementptr' operation ('intx_internal_reciprocal_table_addr', ./intx/int128.hpp:609->./intx/int128.hpp:627) [15]  (0 ns)
	'load' operation ('v0', ./intx/int128.hpp:609->./intx/int128.hpp:627) on array 'intx_internal_reciprocal_table' [16]  (1.3 ns)

 <State 2>: 1.99ns
The critical path consists of the following:
	'load' operation ('v0', ./intx/int128.hpp:609->./intx/int128.hpp:627) on array 'intx_internal_reciprocal_table' [16]  (1.3 ns)
	'mul' operation of DSP[24] ('mul_ln612', ./intx/int128.hpp:612->./intx/int128.hpp:627) [24]  (0.698 ns)

 <State 3>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[24] ('mul_ln612', ./intx/int128.hpp:612->./intx/int128.hpp:627) [24]  (0.698 ns)

 <State 4>: 0.698ns
The critical path consists of the following:
	'mul' operation of DSP[24] ('mul_ln612', ./intx/int128.hpp:612->./intx/int128.hpp:627) [24]  (0.698 ns)

 <State 5>: 6.31ns
The critical path consists of the following:
	'add' operation ('d40', ./intx/int128.hpp:611->./intx/int128.hpp:627) [20]  (1.18 ns)
	'mul' operation ('mul_ln612_3', ./intx/int128.hpp:612->./intx/int128.hpp:627) [26]  (4 ns)
	'sub' operation ('v1', ./intx/int128.hpp:612->./intx/int128.hpp:627) [31]  (1.13 ns)

 <State 6>: 4ns
The critical path consists of the following:
	'mul' operation ('mul_ln614', ./intx/int128.hpp:614->./intx/int128.hpp:627) [37]  (4 ns)

 <State 7>: 6.83ns
The critical path consists of the following:
	'sub' operation ('sub_ln614', ./intx/int128.hpp:614->./intx/int128.hpp:627) [38]  (1.36 ns)
	'mul' operation ('mul_ln614_3', ./intx/int128.hpp:614->./intx/int128.hpp:627) [39]  (5.47 ns)

 <State 8>: 6.83ns
The critical path consists of the following:
	'add' operation ('d63', ./intx/int128.hpp:617->./intx/int128.hpp:627) [47]  (1.36 ns)
	'mul' operation ('mul_ln618', ./intx/int128.hpp:618->./intx/int128.hpp:627) [52]  (5.47 ns)

 <State 9>: 6.83ns
The critical path consists of the following:
	'and' operation ('and_ln618', ./intx/int128.hpp:618->./intx/int128.hpp:627) [50]  (0 ns)
	'sub' operation ('e', ./intx/int128.hpp:618->./intx/int128.hpp:627) [53]  (1.36 ns)
	'mul' operation ('x', ./intx/int128.hpp:397) [56]  (5.47 ns)

 <State 10>: 6.83ns
The critical path consists of the following:
	'add' operation ('v3', ./intx/int128.hpp:619->./intx/int128.hpp:627) [61]  (1.36 ns)
	'mul' operation ('x', ./intx/int128.hpp:397) [64]  (5.47 ns)

 <State 11>: 6.52ns
The critical path consists of the following:
	'phi' operation ('s_word_num_bits_1_2_i', ./intx/int128.hpp:177) with incoming values : ('select_ln177', ./intx/int128.hpp:177) [67]  (0 ns)
	'sub' operation ('v4', ./intx/int128.hpp:621->./intx/int128.hpp:627) [90]  (1.05 ns)
	'mul' operation ('p', ./intx/int128.hpp:628) [91]  (5.47 ns)

 <State 12>: 4.45ns
The critical path consists of the following:
	'add' operation ('p', ./intx/int128.hpp:629) [92]  (1.36 ns)
	'icmp' operation ('icmp_ln633', ./intx/int128.hpp:633) [94]  (1.14 ns)
	'xor' operation ('xor_ln633', ./intx/int128.hpp:633) [95]  (0.148 ns)
	'select' operation ('select_ln633_3', ./intx/int128.hpp:633) [98]  (0 ns)
	'add' operation ('v', ./intx/int128.hpp:633) [99]  (1.36 ns)
	'select' operation ('v', ./intx/int128.hpp:630) [102]  (0.438 ns)

 <State 13>: 6.83ns
The critical path consists of the following:
	'mul' operation ('x', ./intx/int128.hpp:397) [105]  (5.47 ns)
	'add' operation ('p', ./intx/int128.hpp:643) [108]  (1.36 ns)

 <State 14>: 2.24ns
The critical path consists of the following:
	'add' operation ('v', ./intx/int128.hpp:646) [110]  (1.36 ns)
	'select' operation ('select_ln649', ./intx/int128.hpp:649) [117]  (0 ns)
	'select' operation ('select_ln644', ./intx/int128.hpp:644) [118]  (0.438 ns)
	'select' operation ('v', ./intx/int128.hpp:647) [120]  (0.438 ns)

 <State 15>: 5.47ns
The critical path consists of the following:
	'phi' operation ('r') with incoming values : ('high', ./intx/intx.hpp:567) ('r', ./intx/int128.hpp:302) [139]  (0 ns)
	'mul' operation ('x', ./intx/int128.hpp:397) [154]  (5.47 ns)

 <State 16>: 3.56ns
The critical path consists of the following:
	'phi' operation ('r') with incoming values : ('low', ./intx/intx.hpp:567) ('r', ./intx/int128.hpp:302) [138]  (0 ns)
	'add' operation ('q', ./intx/int128.hpp:175) [157]  (1.36 ns)
	'icmp' operation ('icmp_ln176', ./intx/int128.hpp:176) [158]  (1.14 ns)
	'add' operation ('add_ln177_9', ./intx/int128.hpp:177) [160]  (0 ns)
	'add' operation ('q', ./intx/int128.hpp:177) [161]  (1.05 ns)

 <State 17>: 6.83ns
The critical path consists of the following:
	'mul' operation ('mul_ln686', ./intx/int128.hpp:686->./intx/intx.hpp:573) [162]  (5.47 ns)
	'sub' operation ('r1', ./intx/int128.hpp:686->./intx/intx.hpp:573) [163]  (1.36 ns)

 <State 18>: 6.46ns
The critical path consists of the following:
	'sub' operation ('r', ./intx/int128.hpp:213) [173]  (1.36 ns)
	'icmp' operation ('icmp_ln176_6', ./intx/int128.hpp:176) [181]  (1.14 ns)
	'add' operation ('add_ln177_11', ./intx/int128.hpp:177) [183]  (0 ns)
	'add' operation ('r', ./intx/int128.hpp:177) [184]  (1.05 ns)
	'select' operation ('r', ./intx/int128.hpp:695->./intx/intx.hpp:573) [186]  (0.438 ns)
	'icmp' operation ('icmp_ln302_5', ./intx/int128.hpp:302) [189]  (1.14 ns)
	'and' operation ('and_ln302', ./intx/int128.hpp:302) [191]  (0 ns)
	'or' operation ('or_ln302', ./intx/int128.hpp:302) [192]  (0.148 ns)
	'select' operation ('select_ln302', ./intx/int128.hpp:302) [200]  (0.438 ns)
	'store' operation ('store_ln299', D:/Xillin/Vitis_HLS/2020.2/tps/mingw/6.2.0/win64.o/nt\lib\gcc\x86_64-w64-mingw32\6.2.0\include\c++\tuple:299) of variable 'select_ln302', ./intx/int128.hpp:302 on array 'u' [201]  (0.73 ns)

 <State 19>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

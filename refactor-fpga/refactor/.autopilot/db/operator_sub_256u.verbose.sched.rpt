

================================================================
== Vitis HLS Report for 'operator_sub_256u'
================================================================
* Date:           Mon Aug 23 09:42:41 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        refactor-fpga
* Solution:       refactor (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.560 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18|  0.180 us|  0.180 us|   18|   18|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        3|        3|         1|          -|          -|     4|        no|
        |- Loop 2  |        4|        4|         1|          -|          -|     4|        no|
        |- Loop 3  |        3|        3|         1|          -|          -|     4|        no|
        |- Loop 4  |        4|        4|         1|          -|          -|     4|        no|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 3 
3 --> 3 4 
4 --> 4 5 
5 --> 5 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%z_words_0_0 = alloca i32 1"   --->   Operation 6 'alloca' 'z_words_0_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%z_words_1_0 = alloca i32 1"   --->   Operation 7 'alloca' 'z_words_1_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%z_words_2_0 = alloca i32 1"   --->   Operation 8 'alloca' 'z_words_2_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%z_words_3_0 = alloca i32 1"   --->   Operation 9 'alloca' 'z_words_3_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read37 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read3" [./intx/intx.hpp:29]   --->   Operation 10 'read' 'p_read37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read26 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read2" [./intx/intx.hpp:29]   --->   Operation 11 'read' 'p_read26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read15 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read1" [./intx/intx.hpp:29]   --->   Operation 12 'read' 'p_read15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read_13 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %p_read" [./intx/intx.hpp:29]   --->   Operation 13 'read' 'p_read_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.46ns)   --->   "%br_ln29 = br void %_ifconv" [./intx/intx.hpp:29]   --->   Operation 14 'br' 'br_ln29' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 1.29>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%phi_ln29 = phi i2 0, void, i2 %add_ln29, void %_ifconv" [./intx/intx.hpp:29]   --->   Operation 15 'phi' 'phi_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.62ns)   --->   "%add_ln29 = add i2 %phi_ln29, i2 1" [./intx/intx.hpp:29]   --->   Operation 16 'add' 'add_ln29' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%z_words_0_0_load = load i64 %z_words_0_0" [./intx/intx.hpp:29]   --->   Operation 17 'load' 'z_words_0_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%z_words_1_0_load = load i64 %z_words_1_0" [./intx/intx.hpp:29]   --->   Operation 18 'load' 'z_words_1_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%z_words_2_0_load = load i64 %z_words_2_0" [./intx/intx.hpp:29]   --->   Operation 19 'load' 'z_words_2_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%z_words_3_0_load = load i64 %z_words_3_0" [./intx/intx.hpp:29]   --->   Operation 20 'load' 'z_words_3_0_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.39ns)   --->   "%icmp_ln29_27 = icmp_eq  i2 %phi_ln29, i2 2" [./intx/intx.hpp:29]   --->   Operation 21 'icmp' 'icmp_ln29_27' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node select_ln29_62)   --->   "%select_ln29 = select i1 %icmp_ln29_27, i64 %z_words_3_0_load, i64 0" [./intx/intx.hpp:29]   --->   Operation 22 'select' 'select_ln29' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.39ns)   --->   "%icmp_ln29_28 = icmp_eq  i2 %phi_ln29, i2 1" [./intx/intx.hpp:29]   --->   Operation 23 'icmp' 'icmp_ln29_28' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node select_ln29_62)   --->   "%select_ln29_61 = select i1 %icmp_ln29_28, i64 %z_words_3_0_load, i64 %select_ln29" [./intx/intx.hpp:29]   --->   Operation 24 'select' 'select_ln29_61' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.39ns)   --->   "%icmp_ln29_29 = icmp_eq  i2 %phi_ln29, i2 0" [./intx/intx.hpp:29]   --->   Operation 25 'icmp' 'icmp_ln29_29' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.43ns) (out node of the LUT)   --->   "%select_ln29_62 = select i1 %icmp_ln29_29, i64 %z_words_3_0_load, i64 %select_ln29_61" [./intx/intx.hpp:29]   --->   Operation 26 'select' 'select_ln29_62' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node select_ln29_65)   --->   "%select_ln29_63 = select i1 %icmp_ln29_27, i64 0, i64 %z_words_2_0_load" [./intx/intx.hpp:29]   --->   Operation 27 'select' 'select_ln29_63' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node select_ln29_65)   --->   "%select_ln29_64 = select i1 %icmp_ln29_28, i64 %z_words_2_0_load, i64 %select_ln29_63" [./intx/intx.hpp:29]   --->   Operation 28 'select' 'select_ln29_64' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.43ns) (out node of the LUT)   --->   "%select_ln29_65 = select i1 %icmp_ln29_29, i64 %z_words_2_0_load, i64 %select_ln29_64" [./intx/intx.hpp:29]   --->   Operation 29 'select' 'select_ln29_65' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node select_ln29_67)   --->   "%select_ln29_66 = select i1 %icmp_ln29_28, i64 0, i64 %z_words_1_0_load" [./intx/intx.hpp:29]   --->   Operation 30 'select' 'select_ln29_66' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.43ns) (out node of the LUT)   --->   "%select_ln29_67 = select i1 %icmp_ln29_29, i64 %z_words_1_0_load, i64 %select_ln29_66" [./intx/intx.hpp:29]   --->   Operation 31 'select' 'select_ln29_67' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.43ns)   --->   "%select_ln29_68 = select i1 %icmp_ln29_29, i64 0, i64 %z_words_0_0_load" [./intx/intx.hpp:29]   --->   Operation 32 'select' 'select_ln29_68' <Predicate = true> <Delay = 0.43> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.39ns)   --->   "%icmp_ln29 = icmp_eq  i2 %phi_ln29, i2 3" [./intx/intx.hpp:29]   --->   Operation 33 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 34 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %select_ln29_62, i64 %z_words_3_0" [./intx/intx.hpp:29]   --->   Operation 35 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %select_ln29_65, i64 %z_words_2_0" [./intx/intx.hpp:29]   --->   Operation 36 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %select_ln29_67, i64 %z_words_1_0" [./intx/intx.hpp:29]   --->   Operation 37 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %select_ln29_68, i64 %z_words_0_0" [./intx/intx.hpp:29]   --->   Operation 38 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29, void %_ifconv, void %_ZN4intx4uintILj256EEC2Ev.98.exit.i.preheader" [./intx/intx.hpp:29]   --->   Operation 39 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%z_words_3 = alloca i32 1"   --->   Operation 40 'alloca' 'z_words_3' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%z_words_3_25 = alloca i32 1"   --->   Operation 41 'alloca' 'z_words_3_25' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%z_words_3_26 = alloca i32 1"   --->   Operation 42 'alloca' 'z_words_3_26' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%z_words_3_2 = alloca i32 1"   --->   Operation 43 'alloca' 'z_words_3_2' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.46ns)   --->   "%store_ln237 = store i64 %select_ln29_62, i64 %z_words_3_2" [./intx/intx.hpp:237]   --->   Operation 44 'store' 'store_ln237' <Predicate = (icmp_ln29)> <Delay = 0.46>
ST_2 : Operation 45 [1/1] (0.46ns)   --->   "%store_ln237 = store i64 %select_ln29_65, i64 %z_words_3_26" [./intx/intx.hpp:237]   --->   Operation 45 'store' 'store_ln237' <Predicate = (icmp_ln29)> <Delay = 0.46>
ST_2 : Operation 46 [1/1] (0.46ns)   --->   "%store_ln237 = store i64 %select_ln29_67, i64 %z_words_3_25" [./intx/intx.hpp:237]   --->   Operation 46 'store' 'store_ln237' <Predicate = (icmp_ln29)> <Delay = 0.46>
ST_2 : Operation 47 [1/1] (0.46ns)   --->   "%store_ln237 = store i64 %select_ln29_68, i64 %z_words_3" [./intx/intx.hpp:237]   --->   Operation 47 'store' 'store_ln237' <Predicate = (icmp_ln29)> <Delay = 0.46>
ST_2 : Operation 48 [1/1] (0.46ns)   --->   "%br_ln237 = br void %_ZN4intx4uintILj256EEC2Ev.98.exit.i" [./intx/intx.hpp:237]   --->   Operation 48 'br' 'br_ln237' <Predicate = (icmp_ln29)> <Delay = 0.46>

State 3 <SV = 2> <Delay = 1.33>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%i = phi i3 %i_63, void %.split241, i3 0, void %_ZN4intx4uintILj256EEC2Ev.98.exit.i.preheader"   --->   Operation 49 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.71ns)   --->   "%i_63 = add i3 %i, i3 1" [./intx/intx.hpp:237]   --->   Operation 50 'add' 'i_63' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.56ns)   --->   "%icmp_ln237 = icmp_eq  i3 %i, i3 4" [./intx/intx.hpp:237]   --->   Operation 51 'icmp' 'icmp_ln237' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%empty_159 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 52 'speclooptripcount' 'empty_159' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln237 = br i1 %icmp_ln237, void %.split2, void %branch0.preheader" [./intx/intx.hpp:237]   --->   Operation 53 'br' 'br_ln237' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln50 = trunc i3 %i" [./intx/intx.hpp:50]   --->   Operation 54 'trunc' 'trunc_ln50' <Predicate = (!icmp_ln237)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.54ns)   --->   "%tmp = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %p_read_13, i64 %p_read15, i64 %p_read26, i64 %p_read37, i2 %trunc_ln50" [./intx/intx.hpp:238]   --->   Operation 55 'mux' 'tmp' <Predicate = (!icmp_ln237)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.32ns)   --->   "%z_words_0 = xor i64 %tmp, i64 18446744073709551615" [./intx/intx.hpp:238]   --->   Operation 56 'xor' 'z_words_0' <Predicate = (!icmp_ln237)> <Delay = 0.32> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.72ns)   --->   "%switch_ln238 = switch i2 %trunc_ln50, void %branch11, i2 0, void %.split2..split241_crit_edge, i2 1, void %branch9, i2 2, void %branch10" [./intx/intx.hpp:238]   --->   Operation 57 'switch' 'switch_ln238' <Predicate = (!icmp_ln237)> <Delay = 0.72>
ST_3 : Operation 58 [1/1] (0.46ns)   --->   "%store_ln238 = store i64 %z_words_0, i64 %z_words_3_26" [./intx/intx.hpp:238]   --->   Operation 58 'store' 'store_ln238' <Predicate = (!icmp_ln237 & trunc_ln50 == 2)> <Delay = 0.46>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln238 = br void %.split241" [./intx/intx.hpp:238]   --->   Operation 59 'br' 'br_ln238' <Predicate = (!icmp_ln237 & trunc_ln50 == 2)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.46ns)   --->   "%store_ln238 = store i64 %z_words_0, i64 %z_words_3_25" [./intx/intx.hpp:238]   --->   Operation 60 'store' 'store_ln238' <Predicate = (!icmp_ln237 & trunc_ln50 == 1)> <Delay = 0.46>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%br_ln238 = br void %.split241" [./intx/intx.hpp:238]   --->   Operation 61 'br' 'br_ln238' <Predicate = (!icmp_ln237 & trunc_ln50 == 1)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.46ns)   --->   "%store_ln238 = store i64 %z_words_0, i64 %z_words_3" [./intx/intx.hpp:238]   --->   Operation 62 'store' 'store_ln238' <Predicate = (!icmp_ln237 & trunc_ln50 == 0)> <Delay = 0.46>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln238 = br void %.split241" [./intx/intx.hpp:238]   --->   Operation 63 'br' 'br_ln238' <Predicate = (!icmp_ln237 & trunc_ln50 == 0)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.46ns)   --->   "%store_ln238 = store i64 %z_words_0, i64 %z_words_3_2" [./intx/intx.hpp:238]   --->   Operation 64 'store' 'store_ln238' <Predicate = (!icmp_ln237 & trunc_ln50 == 3)> <Delay = 0.46>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%br_ln238 = br void %.split241" [./intx/intx.hpp:238]   --->   Operation 65 'br' 'br_ln238' <Predicate = (!icmp_ln237 & trunc_ln50 == 3)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZN4intx4uintILj256EEC2Ev.98.exit.i"   --->   Operation 66 'br' 'br_ln0' <Predicate = (!icmp_ln237)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%s_word_num_bits_0_0 = alloca i32 1"   --->   Operation 67 'alloca' 's_word_num_bits_0_0' <Predicate = (icmp_ln237)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_0 = alloca i32 1"   --->   Operation 68 'alloca' 's_word_num_bits_1_0' <Predicate = (icmp_ln237)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%s_word_num_bits_2_0 = alloca i32 1"   --->   Operation 69 'alloca' 's_word_num_bits_2_0' <Predicate = (icmp_ln237)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%s_word_num_bits_3_0 = alloca i32 1"   --->   Operation 70 'alloca' 's_word_num_bits_3_0' <Predicate = (icmp_ln237)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.46ns)   --->   "%br_ln0 = br void %branch0"   --->   Operation 71 'br' 'br_ln0' <Predicate = (icmp_ln237)> <Delay = 0.46>

State 4 <SV = 3> <Delay = 1.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%phi_ln29_10 = phi i2 %add_ln29_15, void %branch0, i2 0, void %branch0.preheader" [./intx/intx.hpp:29]   --->   Operation 72 'phi' 'phi_ln29_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.62ns)   --->   "%add_ln29_15 = add i2 %phi_ln29_10, i2 1" [./intx/intx.hpp:29]   --->   Operation 73 'add' 'add_ln29_15' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%s_word_num_bits_0_0_load = load i64 %s_word_num_bits_0_0"   --->   Operation 74 'load' 's_word_num_bits_0_0_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_0_load = load i64 %s_word_num_bits_1_0"   --->   Operation 75 'load' 's_word_num_bits_1_0_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%s_word_num_bits_2_0_load = load i64 %s_word_num_bits_2_0"   --->   Operation 76 'load' 's_word_num_bits_2_0_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%s_word_num_bits_3_0_load = load i64 %s_word_num_bits_3_0"   --->   Operation 77 'load' 's_word_num_bits_3_0_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.54ns)   --->   "%s_word_num_bits_0_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 0, i64 %s_word_num_bits_0_0_load, i64 %s_word_num_bits_0_0_load, i64 %s_word_num_bits_0_0_load, i2 %phi_ln29_10" [./intx/intx.hpp:29]   --->   Operation 78 'mux' 's_word_num_bits_0_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (0.54ns)   --->   "%s_word_num_bits_1_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %s_word_num_bits_1_0_load, i64 0, i64 %s_word_num_bits_1_0_load, i64 %s_word_num_bits_1_0_load, i2 %phi_ln29_10" [./intx/intx.hpp:29]   --->   Operation 79 'mux' 's_word_num_bits_1_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.54ns)   --->   "%s_word_num_bits_2_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %s_word_num_bits_2_0_load, i64 %s_word_num_bits_2_0_load, i64 0, i64 %s_word_num_bits_2_0_load, i2 %phi_ln29_10" [./intx/intx.hpp:29]   --->   Operation 80 'mux' 's_word_num_bits_2_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 81 [1/1] (0.54ns)   --->   "%s_word_num_bits_3_1 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %s_word_num_bits_3_0_load, i64 %s_word_num_bits_3_0_load, i64 %s_word_num_bits_3_0_load, i64 0, i2 %phi_ln29_10" [./intx/intx.hpp:29]   --->   Operation 81 'mux' 's_word_num_bits_3_1' <Predicate = true> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (0.39ns)   --->   "%icmp_ln29_25 = icmp_eq  i2 %phi_ln29_10, i2 3" [./intx/intx.hpp:29]   --->   Operation 82 'icmp' 'icmp_ln29_25' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%empty_160 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 83 'speclooptripcount' 'empty_160' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_3_1, i64 %s_word_num_bits_3_0" [./intx/intx.hpp:29]   --->   Operation 84 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_2_1, i64 %s_word_num_bits_2_0" [./intx/intx.hpp:29]   --->   Operation 85 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_1_1, i64 %s_word_num_bits_1_0" [./intx/intx.hpp:29]   --->   Operation 86 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%store_ln29 = store i64 %s_word_num_bits_0_1, i64 %s_word_num_bits_0_0" [./intx/intx.hpp:29]   --->   Operation 87 'store' 'store_ln29' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29_25, void %branch0, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i.preheader" [./intx/intx.hpp:29]   --->   Operation 88 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%s_word_num_bits_0_2 = alloca i32 1"   --->   Operation 89 'alloca' 's_word_num_bits_0_2' <Predicate = (icmp_ln29_25)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_2 = alloca i32 1"   --->   Operation 90 'alloca' 's_word_num_bits_1_2' <Predicate = (icmp_ln29_25)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%s_word_num_bits_2_2 = alloca i32 1"   --->   Operation 91 'alloca' 's_word_num_bits_2_2' <Predicate = (icmp_ln29_25)> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%s_word_num_bits_3_2 = alloca i32 1"   --->   Operation 92 'alloca' 's_word_num_bits_3_2' <Predicate = (icmp_ln29_25)> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.46ns)   --->   "%store_ln173 = store i64 %s_word_num_bits_3_1, i64 %s_word_num_bits_3_2" [./intx/int128.hpp:173]   --->   Operation 93 'store' 'store_ln173' <Predicate = (icmp_ln29_25)> <Delay = 0.46>
ST_4 : Operation 94 [1/1] (0.46ns)   --->   "%store_ln173 = store i64 %s_word_num_bits_2_1, i64 %s_word_num_bits_2_2" [./intx/int128.hpp:173]   --->   Operation 94 'store' 'store_ln173' <Predicate = (icmp_ln29_25)> <Delay = 0.46>
ST_4 : Operation 95 [1/1] (0.46ns)   --->   "%store_ln173 = store i64 %s_word_num_bits_1_1, i64 %s_word_num_bits_1_2" [./intx/int128.hpp:173]   --->   Operation 95 'store' 'store_ln173' <Predicate = (icmp_ln29_25)> <Delay = 0.46>
ST_4 : Operation 96 [1/1] (0.46ns)   --->   "%store_ln173 = store i64 %s_word_num_bits_0_1, i64 %s_word_num_bits_0_2" [./intx/int128.hpp:173]   --->   Operation 96 'store' 'store_ln173' <Predicate = (icmp_ln29_25)> <Delay = 0.46>
ST_4 : Operation 97 [1/1] (0.46ns)   --->   "%br_ln173 = br void %_ZN4intx4uintILj256EEC2Ev.exit.i.i" [./intx/int128.hpp:173]   --->   Operation 97 'br' 'br_ln173' <Predicate = (icmp_ln29_25)> <Delay = 0.46>

State 5 <SV = 4> <Delay = 4.56>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%i_64 = phi i3 %i_65, void %.split11, i3 0, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i.preheader"   --->   Operation 98 'phi' 'i_64' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%k = phi i1 %k_16, void %.split11, i1 0, void %_ZN4intx4uintILj256EEC2Ev.exit.i.i.preheader"   --->   Operation 99 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.71ns)   --->   "%i_65 = add i3 %i_64, i3 1" [./intx/int128.hpp:173]   --->   Operation 100 'add' 'i_65' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 101 [1/1] (0.56ns)   --->   "%icmp_ln173 = icmp_eq  i3 %i_64, i3 4" [./intx/int128.hpp:173]   --->   Operation 101 'icmp' 'icmp_ln173' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%empty_161 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 102 'speclooptripcount' 'empty_161' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%br_ln173 = br i1 %icmp_ln173, void %.split, void %_ZN4intxplILj256EEENS_4uintIXT_EEERKS2_S4_.83.exit" [./intx/int128.hpp:173]   --->   Operation 103 'br' 'br_ln173' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%z_words_3_load = load i64 %z_words_3" [./intx/int128.hpp:175]   --->   Operation 104 'load' 'z_words_3_load' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%z_words_3_25_load = load i64 %z_words_3_25" [./intx/int128.hpp:175]   --->   Operation 105 'load' 'z_words_3_25_load' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%z_words_3_26_load = load i64 %z_words_3_26" [./intx/int128.hpp:175]   --->   Operation 106 'load' 'z_words_3_26_load' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%z_words_3_2_load = load i64 %z_words_3_2" [./intx/int128.hpp:175]   --->   Operation 107 'load' 'z_words_3_2_load' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%trunc_ln50_23 = trunc i3 %i_64" [./intx/intx.hpp:50]   --->   Operation 108 'trunc' 'trunc_ln50_23' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (0.54ns)   --->   "%tmp_s = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 %z_words_3_load, i64 %z_words_3_25_load, i64 %z_words_3_26_load, i64 %z_words_3_2_load, i2 %trunc_ln50_23" [./intx/int128.hpp:175]   --->   Operation 109 'mux' 'tmp_s' <Predicate = (!icmp_ln173)> <Delay = 0.54> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node add_ln175)   --->   "%tmp_19 = mux i64 @_ssdm_op_Mux.ap_auto.4i64.i2, i64 1, i64 0, i64 0, i64 0, i2 %trunc_ln50_23" [./intx/int128.hpp:175]   --->   Operation 110 'mux' 'tmp_19' <Predicate = (!icmp_ln173)> <Delay = 0.00> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 111 [1/1] (1.36ns) (out node of the LUT)   --->   "%add_ln175 = add i64 %tmp_19, i64 %tmp_s" [./intx/int128.hpp:175]   --->   Operation 111 'add' 'add_ln175' <Predicate = (!icmp_ln173)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 112 [1/1] (1.14ns)   --->   "%k1 = icmp_ult  i64 %add_ln175, i64 %tmp_s" [./intx/int128.hpp:176]   --->   Operation 112 'icmp' 'k1' <Predicate = (!icmp_ln173)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln177 = zext i1 %k" [./intx/int128.hpp:177]   --->   Operation 113 'zext' 'zext_ln177' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (1.36ns)   --->   "%add_ln177 = add i64 %add_ln175, i64 %zext_ln177" [./intx/int128.hpp:177]   --->   Operation 114 'add' 'add_ln177' <Predicate = (!icmp_ln173)> <Delay = 1.36> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 115 [1/1] (0.72ns)   --->   "%switch_ln177 = switch i2 %trunc_ln50_23, void %branch7, i2 0, void %.split..split11_crit_edge, i2 1, void %branch5, i2 2, void %branch6" [./intx/int128.hpp:177]   --->   Operation 115 'switch' 'switch_ln177' <Predicate = (!icmp_ln173)> <Delay = 0.72>
ST_5 : Operation 116 [1/1] (0.46ns)   --->   "%store_ln177 = store i64 %add_ln177, i64 %s_word_num_bits_2_2" [./intx/int128.hpp:177]   --->   Operation 116 'store' 'store_ln177' <Predicate = (!icmp_ln173 & trunc_ln50_23 == 2)> <Delay = 0.46>
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "%br_ln177 = br void %.split11" [./intx/int128.hpp:177]   --->   Operation 117 'br' 'br_ln177' <Predicate = (!icmp_ln173 & trunc_ln50_23 == 2)> <Delay = 0.00>
ST_5 : Operation 118 [1/1] (0.46ns)   --->   "%store_ln177 = store i64 %add_ln177, i64 %s_word_num_bits_1_2" [./intx/int128.hpp:177]   --->   Operation 118 'store' 'store_ln177' <Predicate = (!icmp_ln173 & trunc_ln50_23 == 1)> <Delay = 0.46>
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%br_ln177 = br void %.split11" [./intx/int128.hpp:177]   --->   Operation 119 'br' 'br_ln177' <Predicate = (!icmp_ln173 & trunc_ln50_23 == 1)> <Delay = 0.00>
ST_5 : Operation 120 [1/1] (0.46ns)   --->   "%store_ln177 = store i64 %add_ln177, i64 %s_word_num_bits_0_2" [./intx/int128.hpp:177]   --->   Operation 120 'store' 'store_ln177' <Predicate = (!icmp_ln173 & trunc_ln50_23 == 0)> <Delay = 0.46>
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "%br_ln177 = br void %.split11" [./intx/int128.hpp:177]   --->   Operation 121 'br' 'br_ln177' <Predicate = (!icmp_ln173 & trunc_ln50_23 == 0)> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (0.46ns)   --->   "%store_ln177 = store i64 %add_ln177, i64 %s_word_num_bits_3_2" [./intx/int128.hpp:177]   --->   Operation 122 'store' 'store_ln177' <Predicate = (!icmp_ln173 & trunc_ln50_23 == 3)> <Delay = 0.46>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "%br_ln177 = br void %.split11" [./intx/int128.hpp:177]   --->   Operation 123 'br' 'br_ln177' <Predicate = (!icmp_ln173 & trunc_ln50_23 == 3)> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (1.14ns)   --->   "%icmp_ln178 = icmp_ult  i64 %add_ln177, i64 %zext_ln177" [./intx/int128.hpp:178]   --->   Operation 124 'icmp' 'icmp_ln178' <Predicate = (!icmp_ln173)> <Delay = 1.14> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 125 [1/1] (0.14ns)   --->   "%k_16 = or i1 %icmp_ln178, i1 %k1" [./intx/int128.hpp:178]   --->   Operation 125 'or' 'k_16' <Predicate = (!icmp_ln173)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZN4intx4uintILj256EEC2Ev.exit.i.i"   --->   Operation 126 'br' 'br_ln0' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%s_word_num_bits_0_2_load = load i64 %s_word_num_bits_0_2" [./intx/intx.hpp:349]   --->   Operation 127 'load' 's_word_num_bits_0_2_load' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%s_word_num_bits_1_2_load = load i64 %s_word_num_bits_1_2" [./intx/intx.hpp:349]   --->   Operation 128 'load' 's_word_num_bits_1_2_load' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 129 [1/1] (0.00ns)   --->   "%s_word_num_bits_2_2_load = load i64 %s_word_num_bits_2_2" [./intx/intx.hpp:349]   --->   Operation 129 'load' 's_word_num_bits_2_2_load' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 130 [1/1] (0.00ns)   --->   "%s_word_num_bits_3_2_load = load i64 %s_word_num_bits_3_2" [./intx/intx.hpp:349]   --->   Operation 130 'load' 's_word_num_bits_3_2_load' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 131 [1/1] (0.00ns)   --->   "%mrv = insertvalue i256 <undef>, i64 %s_word_num_bits_0_2_load" [./intx/intx.hpp:349]   --->   Operation 131 'insertvalue' 'mrv' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 132 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i256 %mrv, i64 %s_word_num_bits_1_2_load" [./intx/intx.hpp:349]   --->   Operation 132 'insertvalue' 'mrv_1' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 133 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i256 %mrv_1, i64 %s_word_num_bits_2_2_load" [./intx/intx.hpp:349]   --->   Operation 133 'insertvalue' 'mrv_2' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 134 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i256 %mrv_2, i64 %s_word_num_bits_3_2_load" [./intx/intx.hpp:349]   --->   Operation 134 'insertvalue' 'mrv_3' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_5 : Operation 135 [1/1] (0.00ns)   --->   "%ret_ln349 = ret i256 %mrv_3" [./intx/intx.hpp:349]   --->   Operation 135 'ret' 'ret_ln349' <Predicate = (icmp_ln173)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('phi_ln29', ./intx/intx.hpp:29) with incoming values : ('add_ln29', ./intx/intx.hpp:29) [15]  (0.46 ns)

 <State 2>: 1.3ns
The critical path consists of the following:
	'phi' operation ('phi_ln29', ./intx/intx.hpp:29) with incoming values : ('add_ln29', ./intx/intx.hpp:29) [15]  (0 ns)
	'icmp' operation ('icmp_ln29_28', ./intx/intx.hpp:29) [23]  (0.399 ns)
	'select' operation ('select_ln29_61', ./intx/intx.hpp:29) [24]  (0 ns)
	'select' operation ('select_ln29_62', ./intx/intx.hpp:29) [26]  (0.438 ns)
	'store' operation ('store_ln237', ./intx/intx.hpp:237) of variable 'select_ln29_62', ./intx/intx.hpp:29 on local variable 'z.words_[3]' [45]  (0.46 ns)

 <State 3>: 1.33ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./intx/intx.hpp:237) [51]  (0 ns)
	'mux' operation ('tmp', ./intx/intx.hpp:238) [58]  (0.544 ns)
	'xor' operation ('z.words_[0]', ./intx/intx.hpp:238) [59]  (0.326 ns)
	'store' operation ('store_ln238', ./intx/intx.hpp:238) of variable 'z.words_[0]', ./intx/intx.hpp:238 on local variable 'z.words_[3]' [62]  (0.46 ns)

 <State 4>: 1ns
The critical path consists of the following:
	'phi' operation ('phi_ln29_10', ./intx/intx.hpp:29) with incoming values : ('add_ln29_15', ./intx/intx.hpp:29) [82]  (0 ns)
	'mux' operation ('s_word_num_bits_3_1', ./intx/intx.hpp:29) [91]  (0.544 ns)
	'store' operation ('store_ln173', ./intx/int128.hpp:173) of variable 's_word_num_bits_3_1', ./intx/intx.hpp:29 on local variable 's_word_num_bits_3_2' [104]  (0.46 ns)

 <State 5>: 4.56ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', ./intx/int128.hpp:173) [110]  (0 ns)
	'mux' operation ('tmp_s', ./intx/int128.hpp:175) [122]  (0.544 ns)
	'add' operation ('add_ln175', ./intx/int128.hpp:175) [124]  (1.36 ns)
	'add' operation ('add_ln177', ./intx/int128.hpp:177) [127]  (1.36 ns)
	'icmp' operation ('icmp_ln178', ./intx/int128.hpp:178) [142]  (1.14 ns)
	'or' operation ('k', ./intx/int128.hpp:178) [143]  (0.148 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
